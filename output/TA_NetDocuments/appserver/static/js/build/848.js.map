{"version":3,"file":"848.js","mappings":"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","sources":["webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/MarkdownMessage.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/TextComponent.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/TextAreaComponent.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/SingleInputComponent.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/MultiInputComponent.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/CheckBoxComponent.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/RadioComponent.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/PlaceholderComponent.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/CustomControl.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/FileInputComponent.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/constants/constant.ts","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/CheckboxGroup/StyledComponent.tsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/CheckboxGroup/checkboxGroup.utils.ts","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/Group.tsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/CheckboxGroup/CheckboxRow.tsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/CheckboxGroup/CheckboxRowWrapper.tsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/CheckboxGroup/CheckboxSubGroup.tsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/CheckboxGroup/CheckboxGroup.tsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/constants/ControlTypeMap.ts","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/CheckboxGroup/checkboxGroupValidation.ts","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/HelpLinkComponent.tsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/ControlWrapper.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/constants/oAuthErrorMessage.ts","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/BaseFormView.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/EntityModal.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/EntityPage.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/constants/errorCodes.tsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/ErrorBoundary.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/table/CustomTableControl.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/table/TableExpansionRow.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/table/CustomTableRow.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/DeleteModal.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/table/CustomTable.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/table/TableFilter.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/AcceptModal.tsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/InteractAllStatusButton.tsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/table/TableHeader.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/components/table/TableWrapper.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/constants/dialogStyles.ts","webpack://@splunk/ucc_ui_lib/./src/main/webapp/constants/modes.ts","webpack://@splunk/ucc_ui_lib/./src/main/webapp/constants/preDefinedRegex.ts","webpack://@splunk/ucc_ui_lib/./src/main/webapp/context/TableContext.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/hooks/useQuery.ts","webpack://@splunk/ucc_ui_lib/./src/main/webapp/pages/Input/InputPageStyle.jsx","webpack://@splunk/ucc_ui_lib/./src/main/webapp/util/Validator.js","webpack://@splunk/ucc_ui_lib/./src/main/webapp/util/axiosCallWrapper.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Link from '@splunk/react-ui/Link';\n\nconst MarkdownWrapper = styled.span`\n    color: ${(props) => props.color};\n`;\n\nfunction MarkdownMessage(props) {\n    // flatMap adds the link to the part of text that has been split from text\n    // and returns a new array formed by applying a given function to each element of the array,\n    // and then flattening the result by one level\n    function flatMap(array, fn) {\n        let markdownText = [];\n        for (let i = 0; i < array.length; i += 1) {\n            const mapping = fn(array[i]);\n            markdownText = markdownText.concat(mapping);\n        }\n        return markdownText;\n    }\n\n    function getMarkdownText() {\n        let markdownText = props.text;\n        if (props.markdownType === 'link') {\n            markdownText = <Link to={props.link}>{props.text}</Link>;\n        } else if (props.markdownType === 'hybrid') {\n            // markdownType hybrid is for support of both text and link\n            markdownText = flatMap(markdownText.split(props.token), (part) => [\n                part,\n                <Link key={part} to={props.link}>\n                    {props.linkText}\n                </Link>,\n            ]);\n            markdownText.pop();\n        } else if (props.markdownType === 'text') {\n            markdownText = <MarkdownWrapper color={props.color}>{props.text}</MarkdownWrapper>;\n        }\n\n        return markdownText;\n    }\n\n    return <div data-test=\"msg-markdown\">{getMarkdownText()}</div>;\n}\n\nMarkdownMessage.propTypes = {\n    text: PropTypes.string,\n    link: PropTypes.string,\n    color: PropTypes.string,\n    markdownType: PropTypes.string,\n    token: PropTypes.string,\n    linkText: PropTypes.string,\n};\n\nexport default React.memo(MarkdownMessage);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Text from '@splunk/react-ui/Text';\nimport styled from 'styled-components';\n\nconst TextWrapper = styled(Text)`\n    width: 320px !important;\n`;\n\nclass TextComponent extends Component {\n    handleChange = (e, { value }) => {\n        this.props.handleChange(this.props.field, value);\n    };\n\n    render() {\n        return (\n            <TextWrapper\n                inline\n                error={this.props.error}\n                className={this.props.field}\n                disabled={this.props.disabled}\n                value={\n                    this.props.value === null || typeof this.props.value === 'undefined'\n                        ? ''\n                        : this.props.value.toString()\n                }\n                onChange={this.handleChange}\n                type={this.props.encrypted ? 'password' : 'text'}\n            />\n        );\n    }\n}\n\nTextComponent.propTypes = {\n    // Number is expected if provided number in globalConfig.json instead of a string.\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    handleChange: PropTypes.func.isRequired,\n    field: PropTypes.string,\n    error: PropTypes.bool,\n    encrypted: PropTypes.bool,\n    disabled: PropTypes.bool,\n};\n\nexport default TextComponent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TextArea from '@splunk/react-ui/TextArea';\nimport styled from 'styled-components';\n\nconst TextWrapper = styled(TextArea)`\n    width: 320px !important;\n`;\n\nfunction TextAreaComponent(props) {\n    const handleChange = (e, { value }) => {\n        props.handleChange(props.field, value);\n    };\n\n    return (\n        <TextWrapper\n            inline\n            canClear\n            error={props.error}\n            className={props.field}\n            disabled={props.disabled}\n            value={props.value?.toString() || ''}\n            onChange={handleChange}\n            rowsMax={props?.controlOptions?.rowsMax ? props?.controlOptions?.rowsMax : 12}\n            rowsMin={props?.controlOptions?.rowsMin ? props?.controlOptions?.rowsMin : 8}\n        />\n    );\n}\n\nTextAreaComponent.propTypes = {\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    handleChange: PropTypes.func.isRequired,\n    field: PropTypes.string,\n    error: PropTypes.bool,\n    controlOptions: PropTypes.object,\n    disabled: PropTypes.bool,\n};\n\nexport default TextAreaComponent;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Select from '@splunk/react-ui/Select';\nimport Button from '@splunk/react-ui/Button';\nimport ComboBox from '@splunk/react-ui/ComboBox';\nimport Clear from '@splunk/react-icons/enterprise/Clear';\nimport axios from 'axios';\nimport styled from 'styled-components';\nimport WaitSpinner from '@splunk/react-ui/WaitSpinner';\n\nimport { axiosCallWrapper } from '../util/axiosCallWrapper';\nimport { filterResponse } from '../util/util';\n\nconst SelectWrapper = styled(Select)`\n    width: 320px !important;\n`;\n\nconst WaitSpinnerWrapper = styled(WaitSpinner)`\n    margin-left: 5px;\n`;\n\nconst StyledDiv = styled.div`\n    div:first-child {\n        width: 320px !important;\n    }\n`;\n\nfunction SingleInputComponent(props) {\n    const {\n        field,\n        disabled = false,\n        error = false,\n        controlOptions,\n        dependencyValues,\n        ...restProps\n    } = props;\n    const {\n        endpointUrl,\n        denyList,\n        allowList,\n        dependencies,\n        createSearchChoice,\n        referenceName,\n        disableSearch,\n        labelField,\n        autoCompleteFields,\n        hideClearBtn,\n    } = controlOptions;\n\n    function handleChange(e, obj) {\n        restProps.handleChange(field, obj.value);\n    }\n    const Option = createSearchChoice ? ComboBox.Option : Select.Option;\n    const Heading = createSearchChoice ? ComboBox.Heading : Select.Heading;\n\n    function generateOptions(items) {\n        const data = [];\n        items.forEach((item) => {\n            if (item.value && item.label) {\n                data.push(<Option label={item.label} value={item.value} key={item.value} />);\n            }\n            if (item.children && item.label) {\n                data.push(<Heading key={item.label}>{item.label}</Heading>);\n                item.children.forEach((child) => {\n                    data.push(<Option label={child.label} value={child.value} key={child.value} />);\n                });\n            }\n        });\n        return data;\n    }\n\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState(null);\n\n    useEffect(() => {\n        if (!endpointUrl && !referenceName && autoCompleteFields) {\n            setOptions(generateOptions(autoCompleteFields));\n            return;\n        }\n\n        let current = true;\n        const source = axios.CancelToken.source();\n\n        // eslint-disable-next-line no-shadow\n        const options = { cancelToken: source.token, handleError: true, params: { count: -1 } };\n        if (referenceName) {\n            options.serviceName = referenceName;\n        } else if (endpointUrl) {\n            options.endpointUrl = endpointUrl;\n        }\n\n        if (dependencyValues) {\n            options.params = { ...options.params, ...dependencyValues };\n        }\n        if (!dependencies || dependencyValues) {\n            setLoading(true);\n            axiosCallWrapper(options)\n                .then((response) => {\n                    if (current) {\n                        setOptions(\n                            generateOptions(\n                                filterResponse(response.data.entry, labelField, allowList, denyList)\n                            )\n                        );\n                        setLoading(false);\n                    }\n                })\n                .catch(() => {\n                    if (current) {\n                        setLoading(false);\n                    }\n                    setOptions(null);\n                });\n        } else {\n            setOptions(null);\n        }\n        // eslint-disable-next-line consistent-return\n        return () => {\n            source.cancel('Operation canceled.');\n            current = false;\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [dependencyValues]);\n\n    const effectiveDisabled = loading ? true : disabled;\n    const loadingIndicator = loading ? <WaitSpinnerWrapper /> : null;\n    // hideClearBtn=true only passed for OAuth else its undefined\n    // effectiveIsClearable button will be visible only for the required=false and createSearchChoice=false single-select fields.\n    const effectiveIsClearable = !(effectiveDisabled || restProps.required || hideClearBtn);\n\n    return createSearchChoice ? (\n        <StyledDiv className=\"dropdownBox\">\n            <ComboBox\n                value={props.value === null ? '' : props.value}\n                name={field}\n                error={error}\n                disabled={effectiveDisabled}\n                onChange={handleChange} // eslint-disable-line react/jsx-no-bind\n                inline\n            >\n                {options && options.length > 0 && options}\n            </ComboBox>\n            {loadingIndicator}\n        </StyledDiv>\n    ) : (\n        <>\n            <SelectWrapper\n                className=\"dropdownBox\"\n                data-test-loading={loading}\n                value={props.value}\n                name={field}\n                error={error}\n                disabled={effectiveDisabled}\n                onChange={handleChange} // eslint-disable-line react/jsx-no-bind\n                filter={!disableSearch}\n                inline\n            >\n                {options && options.length > 0 && options}\n            </SelectWrapper>{' '}\n            {loadingIndicator}\n            {effectiveIsClearable ? (\n                <Button\n                    data-test=\"clear\"\n                    appearance=\"secondary\"\n                    icon={<Clear />}\n                    onClick={() => restProps.handleChange(field, '')}\n                />\n            ) : null}\n        </>\n    );\n}\n\nSingleInputComponent.propTypes = {\n    disabled: PropTypes.bool,\n    value: PropTypes.string,\n    error: PropTypes.bool,\n    handleChange: PropTypes.func.isRequired,\n    field: PropTypes.string,\n    dependencyValues: PropTypes.object,\n    controlOptions: PropTypes.shape({\n        autoCompleteFields: PropTypes.array,\n        endpointUrl: PropTypes.string,\n        denyList: PropTypes.string,\n        allowList: PropTypes.string,\n        dependencies: PropTypes.array,\n        createSearchChoice: PropTypes.bool,\n        referenceName: PropTypes.string,\n        disableSearch: PropTypes.bool,\n        labelField: PropTypes.string,\n        hideClearBtn: PropTypes.bool,\n    }),\n    required: PropTypes.bool,\n};\n\nexport default SingleInputComponent;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Multiselect from '@splunk/react-ui/Multiselect';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport WaitSpinner from '@splunk/react-ui/WaitSpinner';\n\nimport { axiosCallWrapper } from '../util/axiosCallWrapper';\nimport { filterResponse } from '../util/util';\n\nconst MultiSelectWrapper = styled(Multiselect)`\n    width: 320px !important;\n`;\n\nconst WaitSpinnerWrapper = styled(WaitSpinner)`\n    margin-left: 5px;\n`;\n\nfunction MultiInputComponent(props) {\n    const {\n        field,\n        disabled = false,\n        error = false,\n        value,\n        controlOptions,\n        dependencyValues,\n        ...restProps\n    } = props;\n    const {\n        endpointUrl,\n        denyList,\n        allowList,\n        items,\n        dependencies,\n        referenceName,\n        createSearchChoice,\n        labelField,\n        delimiter = ',',\n    } = controlOptions;\n\n    function handleChange(e, { values }) {\n        restProps.handleChange(field, values.join(delimiter));\n    }\n\n    function generateOptions(itemList) {\n        return itemList.map((item) => (\n            <Multiselect.Option label={item.label} value={item.value} key={item.value} />\n        ));\n    }\n\n    const [loading, setLoading] = useState(false);\n    const [options, setOptions] = useState(null);\n\n    useEffect(() => {\n        if (!endpointUrl && items) {\n            setOptions(generateOptions(items));\n            return;\n        }\n\n        let current = true;\n        const source = axios.CancelToken.source();\n\n        // eslint-disable-next-line no-shadow\n        const options = { cancelToken: source.token, handleError: true, params: { count: -1 } };\n        if (referenceName) {\n            options.serviceName = referenceName;\n        } else if (endpointUrl) {\n            options.endpointUrl = endpointUrl;\n        }\n\n        if (dependencyValues) {\n            options.params = { ...options.params, ...dependencyValues };\n        }\n        if (!dependencies || dependencyValues) {\n            setLoading(true);\n            axiosCallWrapper(options)\n                .then((response) => {\n                    if (current) {\n                        setOptions(\n                            generateOptions(\n                                filterResponse(response.data.entry, labelField, allowList, denyList)\n                            )\n                        );\n                        setLoading(false);\n                    }\n                })\n                .catch(() => {\n                    if (current) {\n                        setLoading(false);\n                    }\n                });\n        }\n        // eslint-disable-next-line consistent-return\n        return () => {\n            source.cancel('Operation canceled.');\n            current = false;\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [dependencyValues]);\n\n    const effectiveDisabled = loading ? true : disabled;\n    const loadingIndicator = loading ? <WaitSpinnerWrapper /> : null;\n\n    const valueList = value ? value.split(delimiter) : [];\n\n    return (\n        <>\n            <MultiSelectWrapper\n                values={valueList}\n                error={error}\n                name={field}\n                disabled={effectiveDisabled}\n                allowNewValues={createSearchChoice}\n                onChange={handleChange} // eslint-disable-line react/jsx-no-bind\n                inline\n            >\n                {options && options.length > 0 && options}\n            </MultiSelectWrapper>\n            {loadingIndicator}\n        </>\n    );\n}\n\nMultiInputComponent.propTypes = {\n    disabled: PropTypes.bool,\n    value: PropTypes.string,\n    error: PropTypes.bool,\n    handleChange: PropTypes.func.isRequired,\n    field: PropTypes.string,\n    dependencyValues: PropTypes.object,\n    controlOptions: PropTypes.shape({\n        delimiter: PropTypes.string,\n        createSearchChoice: PropTypes.bool,\n        referenceName: PropTypes.string,\n        dependencies: PropTypes.array,\n        endpointUrl: PropTypes.string,\n        denyList: PropTypes.string,\n        allowList: PropTypes.string,\n        labelField: PropTypes.string,\n        items: PropTypes.arrayOf(\n            PropTypes.shape({\n                label: PropTypes.string.isRequired,\n                value: PropTypes.string.isRequired,\n            })\n        ),\n    }),\n};\n\nexport default MultiInputComponent;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Switch from '@splunk/react-ui/Switch';\nimport { isFalse } from '../util/util';\n\nclass CheckBoxComponent extends Component {\n    handleChange = () => {\n        if (this.props.value && !isFalse(this.props.value)) {\n            this.props.handleChange(this.props.field, 0);\n        } else {\n            this.props.handleChange(this.props.field, 1);\n        }\n    };\n\n    render() {\n        return (\n            <Switch\n                key={this.props.field}\n                value={this.props.field}\n                onClick={this.handleChange}\n                disabled={this.props.disabled}\n                selected={!(this.props.value ? isFalse(this.props.value) : true)}\n                appearance=\"checkbox\"\n            />\n        );\n    }\n}\n\nCheckBoxComponent.propTypes = {\n    value: PropTypes.oneOfType([PropTypes.bool, PropTypes.number, PropTypes.string]),\n    handleChange: PropTypes.func.isRequired,\n    field: PropTypes.string,\n    disabled: PropTypes.bool,\n};\n\nexport default CheckBoxComponent;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport RadioBar from '@splunk/react-ui/RadioBar';\nimport styled from 'styled-components';\n\nconst RadioBarWrapper = styled(RadioBar)`\n    width: 320px;\n`;\n\nconst RadioBarOption = styled(RadioBar.Option)`\n    margin-left: 0px !important;\n`;\n\nclass RadioComponent extends Component {\n    handleChange = (e, { value }) => {\n        this.props.handleChange(this.props.field, value);\n    };\n\n    render() {\n        return (\n            <RadioBarWrapper\n                inline\n                onChange={this.handleChange}\n                value={this.props.value}\n                key={this.props.field}\n            >\n                {this.props.controlOptions.items.map((item) => (\n                    <RadioBarOption key={item.value} value={item.value} label={item.label} />\n                ))}\n            </RadioBarWrapper>\n        );\n    }\n}\n\nRadioComponent.propTypes = {\n    value: PropTypes.string,\n    handleChange: PropTypes.func.isRequired,\n    field: PropTypes.string,\n    controlOptions: PropTypes.object,\n};\n\nexport default RadioComponent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport StaticContent from '@splunk/react-ui/StaticContent';\n\nfunction PlaceholderComponent(props) {\n    const { defaultValue } = props.controlOptions;\n\n    return <StaticContent>{defaultValue}</StaticContent>;\n}\n\nPlaceholderComponent.propTypes = {\n    controlOptions: PropTypes.object,\n};\n\nexport default PlaceholderComponent;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { _ } from '@splunk/ui-utils/i18n';\n\nimport { getUnifiedConfigs } from '../util/util';\nimport { getBuildDirPath } from '../util/script';\n\nclass CustomControl extends Component {\n    static loadCustomControl = (module, type, appName) =>\n        new Promise((resolve) => {\n            if (type === 'external') {\n                import(/* webpackIgnore: true */ `${getBuildDirPath()}/custom/${module}.js`).then(\n                    (external) => {\n                        const Control = external.default;\n                        resolve(Control);\n                    }\n                );\n            } else {\n                __non_webpack_require__([`app/${appName}/js/build/custom/${module}`], (Control) => {\n                    resolve(Control);\n                });\n            }\n        });\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n        };\n        this.shouldRender = true;\n    }\n\n    componentDidMount() {\n        const globalConfig = getUnifiedConfigs();\n        const appName = globalConfig.meta.name;\n\n        CustomControl.loadCustomControl(\n            this.props.controlOptions.src,\n            this.props.controlOptions.type,\n            appName\n        ).then((Control) => {\n            const customControl = new Control(\n                globalConfig,\n                this.el,\n                this.props.data,\n                this.setValue,\n                this.props.utilCustomFunctions\n            );\n            customControl.render();\n\n            if (typeof customControl.validation === 'function') {\n                this.props.addCustomValidator(this.props.field, customControl.validation);\n            }\n            this.setState({ loading: false });\n        });\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (!nextState.loading && this.shouldRender) {\n            this.shouldRender = false;\n            return true;\n        }\n        return false;\n    }\n\n    setValue = (newValue) => {\n        this.props.handleChange(this.props.field, newValue);\n    };\n\n    render() {\n        return (\n            <>\n                {this.state.loading && _('Loading...')}\n                {\n                    <span // nosemgrep: typescript.react.security.audit.react-no-refs.react-no-refs\n                        ref={(el) => {\n                            this.el = el;\n                        }}\n                        style={{ visibility: this.state.loading ? 'hidden' : 'visible' }}\n                    />\n                }\n            </>\n        );\n    }\n}\n\nCustomControl.propTypes = {\n    data: PropTypes.object,\n    field: PropTypes.string,\n    handleChange: PropTypes.func,\n    controlOptions: PropTypes.object,\n    addCustomValidator: PropTypes.func,\n    utilCustomFunctions: PropTypes.object,\n};\n\nexport default CustomControl;\n","import React, { useState } from 'react';\nimport File from '@splunk/react-ui/File';\nimport styled from 'styled-components';\nimport PropTypes from 'prop-types';\n\nimport FileConstants from '../constants/constant';\nimport { getFormattedMessage } from '../util/messageUtil';\n\nconst FileWrapper = styled(File)`\n    width: 320px !important;\n    > div[class*='FileStyles__StyledHelp-'] {\n        margin-bottom: 0px;\n    }\n`;\n\nfunction isValidFile(fileType, fileSize, supportedFileTypes, maxFileSize) {\n    if (!supportedFileTypes.includes(fileType)) {\n        return (\n            <span style={{ color: 'red' }}>\n                {getFormattedMessage(supportedFileTypes.length === 1 ? 28 : 24, [\n                    supportedFileTypes.join(', '),\n                ])}\n            </span>\n        );\n    }\n    if (fileSize > maxFileSize) {\n        return <span style={{ color: 'red' }}>{getFormattedMessage(25, [maxFileSize])}</span>;\n    }\n    return true;\n}\n\nfunction FileInputComponent(props) {\n    const { field, disabled, controlOptions, handleChange } = props;\n    const {\n        fileSupportMessage,\n        supportedFileTypes,\n        maxFileSize = FileConstants.FILE_MAX_SIZE,\n    } = controlOptions;\n\n    const fileReader = new FileReader();\n    const textDecoder = new TextDecoder(); // default utf-8\n\n    const [fileName, setFileName] = useState('');\n    const [errorMsg, setErrorMsg] = useState('');\n\n    const handleAddFiles = (files) => {\n        if (files.length) {\n            const file = files[0];\n\n            if (fileReader.readyState === 1) {\n                fileReader.abort();\n            }\n\n            fileReader.readAsArrayBuffer(file);\n\n            fileReader.onload = () => {\n                const isValid = isValidFile(\n                    file.name.split('.').pop(),\n                    file.size / 1024,\n                    supportedFileTypes,\n                    maxFileSize\n                );\n                if (isValid === true) {\n                    setErrorMsg('');\n                    try {\n                        handleChange(field, textDecoder.decode(fileReader.result));\n                    } catch (err) {\n                        // eslint-disable-next-line no-console\n                        console.log(err);\n                    }\n                } else {\n                    setErrorMsg(isValid);\n                    handleChange(field, '##INVALID_FILE##');\n                }\n                setFileName(file.name);\n            };\n        }\n    };\n\n    const handleRemoveFile = () => {\n        if (fileReader.readyState === 1) {\n            fileReader.abort();\n        }\n        setFileName(null);\n        handleChange(field, '');\n        setErrorMsg('');\n    };\n\n    return (\n        <FileWrapper\n            key={field}\n            onRequestAdd={handleAddFiles}\n            onRequestRemove={handleRemoveFile}\n            supportsMessage={<> {fileSupportMessage} </>}\n            disabled={disabled}\n            help={errorMsg}\n            error={!!errorMsg}\n        >\n            {fileName && <File.Item name={fileName} />}\n        </FileWrapper>\n    );\n}\n\nFileInputComponent.propTypes = {\n    field: PropTypes.string,\n    controlOptions: PropTypes.object,\n    disabled: PropTypes.bool,\n    handleChange: PropTypes.func,\n};\n\nexport default FileInputComponent;\n","export default {\n    FILE_MAX_SIZE: '500',\n} as const;\n","import styled from 'styled-components';\nimport ColumnLayout from '@splunk/react-ui/ColumnLayout';\n\nconst StyledColumnLayout = styled(ColumnLayout)`\n    width: 320px;\n`;\n\nexport { StyledColumnLayout };\n","import { NumberValidator, RegexValidator, StringValidator } from '../../types/ValidatorsTypes';\n\ntype Field = string;\ntype Value = {\n    checkbox: boolean;\n    text: string;\n    error?: string;\n};\n\nexport type ValueByField = Map<Field, Value>;\n/**\n *\n * @param collection string like collect_collaboration/1200,collect_file/1,collect_task/1\n */\nexport function parseValue(collection?: string): ValueByField {\n    const resultMap = new Map<Field, Value>();\n\n    if (!collection) {\n        return resultMap;\n    }\n\n    const splitValues = collection.split(',');\n    splitValues.forEach((rawValue) => {\n        const [field, text] = rawValue.split('/');\n        if (!field) {\n            throw new Error(`Value is not parsable: ${collection}`);\n        }\n\n        resultMap.set(field, {\n            checkbox: true,\n            text: text || '',\n        });\n    });\n\n    return resultMap;\n}\n\nexport function packValue(map: ValueByField) {\n    return Array.from(map.entries())\n        .filter(([, value]) => value.checkbox)\n        .map(([field, value]) => `${field}/${value.text}`)\n        .join(',');\n}\n\nexport interface Group {\n    label: string;\n    fields: string[];\n    options?: {\n        isExpandable?: boolean;\n        expand?: boolean;\n    };\n}\n\nexport interface Row {\n    field: string;\n    checkbox?: {\n        label: string;\n        value?: boolean;\n        options?: {\n            enable?: boolean;\n        };\n    };\n    text: {\n        defaultValue?: number | string;\n        validators?: (StringValidator | RegexValidator | NumberValidator)[];\n        required?: boolean;\n    };\n}\n\nexport type GroupWithRows = Group & { rows: Row[] };\n\nexport interface CheckboxGroupProps {\n    field: string;\n    value?: string;\n    controlOptions: {\n        groups?: Group[];\n        rows: Row[];\n    };\n    addCustomValidator?: (\n        field: string,\n        validator: (submittedField: string, submittedValue: string) => void\n    ) => void;\n    handleChange: (field: string, value: string, componentType?: 'checkboxGroup') => void;\n}\n\nexport function isGroupWithRows(item: GroupWithRows | Row): item is GroupWithRows {\n    return 'label' in item;\n}\n\nexport function getFlattenRowsWithGroups({ groups, rows }: CheckboxGroupProps['controlOptions']) {\n    const flattenRowsMixedWithGroups: Array<GroupWithRows | Row> = [];\n\n    rows.forEach((row) => {\n        const groupForThisRow = groups?.find((group) => group.fields.includes(row.field));\n        if (groupForThisRow) {\n            const addedGroup = flattenRowsMixedWithGroups.find(\n                (item): item is GroupWithRows =>\n                    isGroupWithRows(item) && item.label === groupForThisRow.label\n            );\n            const groupToAdd = addedGroup || {\n                ...groupForThisRow,\n                rows: [],\n            };\n            groupToAdd.rows.push(row);\n            if (!addedGroup) {\n                flattenRowsMixedWithGroups.push(groupToAdd);\n            }\n            return;\n        }\n        flattenRowsMixedWithGroups.push(row);\n    });\n\n    return flattenRowsMixedWithGroups;\n}\n\nexport function getNewCheckboxValues(\n    values: ValueByField,\n    newValue: {\n        field: string;\n        checkbox: boolean;\n        text?: string;\n    }\n) {\n    const newValues = new Map(values);\n    newValues.set(newValue.field, {\n        checkbox: newValue.checkbox,\n        text: newValue.text || '',\n    });\n\n    return newValues;\n}\n\nexport function getCheckedCheckboxesCount(group: GroupWithRows, values: ValueByField) {\n    let checkedCheckboxesCount = 0;\n    group.rows.forEach((row) => {\n        if (values.get(row.field)?.checkbox) {\n            checkedCheckboxesCount += 1;\n        }\n    });\n    return checkedCheckboxesCount;\n}\n","import React, { ReactNode } from 'react';\nimport styled from 'styled-components';\nimport CollapsiblePanel from '@splunk/react-ui/CollapsiblePanel';\n\nconst GroupWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n`;\n\nconst CollapsiblePanelWrapper = styled(CollapsiblePanel)`\n    span {\n        button {\n            background-color: #f2f4f5;\n            font-size: 14px;\n\n            &:hover:not([disabled]),\n            &:focus:not([disabled]),\n            &:active:not([disabled]) {\n                background-color: #f2f4f5;\n                box-shadow: none;\n            }\n        }\n    }\n`;\n\nconst StyledPadding8 = styled.div`\n    padding-top: 8px;\n    padding-bottom: 8px;\n`;\n\nconst CustomGroupLabel = styled.div`\n    display: flex;\n    justify-content: space-between;\n    padding: 6px 10px;\n    background-color: #f2f4f5;\n    font-size: 14px;\n    margin-bottom: 10px;\n`;\n\nconst Description = styled.span`\n    padding-right: 20px;\n    margin-left: 10px;\n    font-size: 12px;\n`;\n\ninterface GroupProps {\n    title: ReactNode;\n    description?: string;\n    children: ReactNode;\n    isExpandable?: boolean;\n    defaultOpen?: boolean;\n}\n\nfunction Group({ isExpandable, defaultOpen, children, title, description }: GroupProps) {\n    return (\n        <GroupWrapper>\n            {isExpandable ? (\n                <CollapsiblePanelWrapper\n                    title={title}\n                    defaultOpen={defaultOpen}\n                    description={description}\n                >\n                    <StyledPadding8>{children}</StyledPadding8>\n                </CollapsiblePanelWrapper>\n            ) : (\n                <>\n                    <CustomGroupLabel>\n                        <span>{title}</span>\n                        <Description>{description}</Description>\n                    </CustomGroupLabel>\n                    <div>{children}</div>\n                </>\n            )}\n        </GroupWrapper>\n    );\n}\n\nexport default Group;\n","import React, { useState, useEffect } from 'react';\nimport ColumnLayout from '@splunk/react-ui/ColumnLayout';\nimport Text from '@splunk/react-ui/Text';\nimport { TextChangeHandler } from '@splunk/react-ui/types/src/Text/Text';\nimport styled from 'styled-components';\nimport Switch from '@splunk/react-ui/Switch';\nimport { StyledColumnLayout } from './StyledComponent';\n\nconst StyledSwitch = styled(Switch)`\n    padding-left: 3px;\n`;\nconst StyledText = styled(Text)`\n    padding-right: 3px;\n`;\n\ninterface CheckboxRowProps {\n    field: string;\n    label: string;\n    checkbox: boolean;\n    text?: string;\n    disabled?: boolean;\n    handleChange: (value: { field: string; checkbox: boolean; text?: string }) => void;\n}\n\nfunction CheckboxRow(props: CheckboxRowProps) {\n    const { field, label, checkbox, text, disabled, handleChange } = props;\n\n    const [isTextDisabled, setIsTextDisabled] = useState(!checkbox || disabled);\n\n    useEffect(() => {\n        setIsTextDisabled(!checkbox || disabled);\n    }, [checkbox, disabled]);\n\n    const handleChangeTextBox: TextChangeHandler = (event) => {\n        if (event?.target && 'value' in event.target) {\n            handleChange({ field, text: event.target.value, checkbox });\n        }\n    };\n\n    const handleChangeCheckbox = (event: unknown, data: { selected: boolean; value?: unknown }) => {\n        const previousValue = data.selected;\n        handleChange({ field, text, checkbox: !previousValue });\n    };\n\n    return (\n        <StyledColumnLayout>\n            <ColumnLayout.Row>\n                <ColumnLayout.Column span={5}>\n                    <StyledSwitch\n                        key={field}\n                        value={field}\n                        selected={checkbox}\n                        onClick={handleChangeCheckbox}\n                        appearance=\"checkbox\"\n                        disabled={disabled}\n                    >\n                        {label}\n                    </StyledSwitch>\n                </ColumnLayout.Column>\n                <ColumnLayout.Column span={2}>\n                    <StyledText\n                        inline\n                        disabled={isTextDisabled}\n                        value={text || ''}\n                        onChange={handleChangeTextBox}\n                        type=\"text\"\n                        required\n                    />\n                </ColumnLayout.Column>\n            </ColumnLayout.Row>\n        </StyledColumnLayout>\n    );\n}\nexport default CheckboxRow;\n","import React from 'react';\nimport CheckboxRow from './CheckboxRow';\nimport { Row, ValueByField } from './checkboxGroup.utils';\n\nfunction CheckboxRowWrapper({\n    row,\n    values,\n    handleRowChange,\n}: {\n    row: Row;\n    values: ValueByField;\n    handleRowChange: (newValue: { field: string; checkbox: boolean; text?: string }) => void;\n}) {\n    const valueForField = values.get(row.field);\n    return (\n        <CheckboxRow\n            field={row.field}\n            label={row.checkbox?.label || row.field}\n            checkbox={!!valueForField?.checkbox}\n            disabled={row.checkbox?.options?.enable === false}\n            text={valueForField ? valueForField.text : row.text?.defaultValue?.toString()}\n            handleChange={handleRowChange}\n        />\n    );\n}\nexport default CheckboxRowWrapper;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Group from '../Group';\nimport { getCheckedCheckboxesCount, GroupWithRows, ValueByField } from './checkboxGroup.utils';\nimport CheckboxRowWrapper from './CheckboxRowWrapper';\n\nconst StyledCheckboxRowWrapper = styled.div`\n    & > *:not(:last-child) {\n        margin-bottom: 10px;\n    }\n`;\n\ninterface CheckboxSubGroupProps {\n    group: GroupWithRows;\n    values: ValueByField;\n    handleRowChange: (newValue: { field: string; checkbox: boolean; text?: string }) => void;\n}\n\nfunction CheckboxSubGroup({ group, values, handleRowChange }: CheckboxSubGroupProps) {\n    const checkedCheckboxesCount = getCheckedCheckboxesCount(group, values);\n    return (\n        <Group\n            title={group.label}\n            description={`${checkedCheckboxesCount} of ${group.fields.length}`}\n            isExpandable={group.options?.isExpandable}\n            defaultOpen={group.options?.expand}\n        >\n            <StyledCheckboxRowWrapper>\n                {group.rows.map((rowInsideGroup) => (\n                    <CheckboxRowWrapper\n                        row={rowInsideGroup}\n                        values={values}\n                        handleRowChange={handleRowChange}\n                        key={`row_${rowInsideGroup.field}`}\n                    />\n                ))}\n            </StyledCheckboxRowWrapper>\n        </Group>\n    );\n}\n\nexport default CheckboxSubGroup;\n","import React, { useState } from 'react';\nimport ColumnLayout from '@splunk/react-ui/ColumnLayout';\nimport Button from '@splunk/react-ui/Button';\nimport { StyledColumnLayout } from './StyledComponent';\nimport {\n    CheckboxGroupProps,\n    getFlattenRowsWithGroups,\n    getNewCheckboxValues,\n    isGroupWithRows,\n    packValue,\n    parseValue,\n} from './checkboxGroup.utils';\nimport CheckboxSubGroup from './CheckboxSubGroup';\nimport CheckboxRowWrapper from './CheckboxRowWrapper';\nimport { useValidation } from './checkboxGroupValidation';\n\nfunction CheckboxGroup(props: CheckboxGroupProps) {\n    const { field, value, handleChange, controlOptions, addCustomValidator } = props;\n\n    const flattenedRowsWithGroups = getFlattenRowsWithGroups(controlOptions);\n\n    const [values, setValues] = useState(parseValue(value));\n    useValidation(addCustomValidator, field, controlOptions);\n\n    const handleRowChange = (newValue: { field: string; checkbox: boolean; text?: string }) => {\n        const newValues = getNewCheckboxValues(values, newValue);\n\n        setValues(newValues);\n        handleChange(field, packValue(newValues), 'checkboxGroup');\n    };\n\n    const handleCheckboxToggleAll = (newCheckboxValue: boolean) => {\n        const newValues = new Map(values);\n\n        controlOptions.rows.forEach((row) => {\n            const oldValue = values.get(row.field);\n            if (!!oldValue?.checkbox === newCheckboxValue) {\n                return;\n            }\n            newValues.set(row.field, {\n                checkbox: newCheckboxValue,\n                text: oldValue?.text || row.text.defaultValue?.toString() || '',\n            });\n        });\n        setValues(newValues);\n        handleChange(field, packValue(newValues), 'checkboxGroup');\n    };\n\n    return (\n        <>\n            <StyledColumnLayout gutter={5}>\n                {flattenedRowsWithGroups.map((row) => {\n                    if (isGroupWithRows(row)) {\n                        // labels are unique across groups\n                        return (\n                            <ColumnLayout.Row key={`group_${row.label}`}>\n                                <CheckboxSubGroup\n                                    group={row}\n                                    values={values}\n                                    handleRowChange={handleRowChange}\n                                />\n                            </ColumnLayout.Row>\n                        );\n                    }\n                    return (\n                        <ColumnLayout.Row key={`row_${row.field}`}>\n                            <CheckboxRowWrapper\n                                row={row}\n                                values={values}\n                                handleRowChange={handleRowChange}\n                            />\n                        </ColumnLayout.Row>\n                    );\n                })}\n                <ColumnLayout.Row />\n            </StyledColumnLayout>\n            <div>\n                <Button\n                    label=\"Select All\"\n                    appearance=\"pill\"\n                    onClick={() => handleCheckboxToggleAll(true)}\n                />\n                <Button\n                    label=\"Clear All\"\n                    appearance=\"pill\"\n                    onClick={() => handleCheckboxToggleAll(false)}\n                />\n            </div>\n        </>\n    );\n}\n\nexport default CheckboxGroup;\n","import HelpLinkComponent from '../components/HelpLinkComponent';\nimport TextComponent from '../components/TextComponent';\nimport TextAreaComponent from '../components/TextAreaComponent';\nimport SingleInputComponent from '../components/SingleInputComponent';\nimport MultiInputComponent from '../components/MultiInputComponent';\nimport CheckBoxComponent from '../components/CheckBoxComponent';\nimport RadioComponent from '../components/RadioComponent';\nimport PlaceholderComponent from '../components/PlaceholderComponent';\nimport CustomControl from '../components/CustomControl';\nimport FileInputComponent from '../components/FileInputComponent';\nimport CheckboxGroup from '../components/CheckboxGroup/CheckboxGroup';\n\nexport default {\n    checkbox: CheckBoxComponent,\n    checkboxGroup: CheckboxGroup,\n    custom: CustomControl,\n    file: FileInputComponent,\n    helpLink: HelpLinkComponent,\n    multipleSelect: MultiInputComponent,\n    placeholder: PlaceholderComponent,\n    radio: RadioComponent,\n    singleSelect: SingleInputComponent,\n    text: TextComponent,\n    textarea: TextAreaComponent,\n} as const;\n","import { useEffect } from 'react';\nimport Validator from '../../util/Validator';\nimport { CheckboxGroupProps, parseValue } from './checkboxGroup.utils';\n\ntype MaybeError =\n    | {\n          errorField: string;\n          errorMsg: string;\n      }\n    | false;\n\nexport function validateCheckboxGroup(\n    field: string,\n    packedValue: string,\n    options: CheckboxGroupProps['controlOptions']\n): MaybeError {\n    let errorMessage: MaybeError = false;\n    const parsedValue = parseValue(packedValue);\n    options.rows.some((row) => {\n        const rowSubmittedValue = parsedValue.get(row.field);\n        if (rowSubmittedValue) {\n            if (row.text.required) {\n                errorMessage = Validator.RequiredValidator(\n                    field,\n                    row.checkbox?.label || row.field,\n                    rowSubmittedValue?.text\n                );\n                // break loop\n                return errorMessage;\n            }\n\n            const { validators } = row.text;\n            if (validators?.length) {\n                return validators.some((validator) => {\n                    const { type } = validator;\n                    switch (type) {\n                        case 'regex':\n                            errorMessage = Validator.RegexValidator(\n                                field,\n                                row.checkbox?.label || row.field,\n                                validator,\n                                rowSubmittedValue?.text\n                            );\n                            return errorMessage;\n                        case 'string':\n                            errorMessage = Validator.StringValidator(\n                                field,\n                                row.checkbox?.label || row.field,\n                                validator,\n                                rowSubmittedValue?.text\n                            );\n                            return errorMessage;\n\n                        case 'number':\n                            errorMessage = Validator.NumberValidator(\n                                field,\n                                row.checkbox?.label || row.field,\n                                validator,\n                                rowSubmittedValue?.text\n                            );\n\n                            return errorMessage;\n\n                        default:\n                            throw new Error(\n                                `[CheckboxGroup] Unsupported validator ${type} for field ${field}`\n                            );\n                    }\n                });\n            }\n        }\n        return false;\n    });\n    return errorMessage;\n}\n\nexport function useValidation(\n    addCustomValidator: CheckboxGroupProps['addCustomValidator'],\n    field: string,\n    controlOptions: CheckboxGroupProps['controlOptions']\n) {\n    useEffect(() => {\n        addCustomValidator?.(field, (submittedField, submittedValue) => {\n            const validationResult = validateCheckboxGroup(\n                submittedField,\n                submittedValue,\n                controlOptions\n            );\n            if (validationResult !== false) {\n                return validationResult.errorMsg;\n            }\n            return validationResult;\n        });\n    }, [field, addCustomValidator, controlOptions]);\n}\n","import React from 'react';\nimport Link from '@splunk/react-ui/Link';\n\ninterface Props {\n    controlOptions: {\n        text: string;\n        link: string;\n    };\n}\n\nfunction HelpLinkComponent(props: Props) {\n    const { text, link } = props.controlOptions;\n\n    return (\n        <Link to={link} openInNewContext>\n            {text}\n        </Link>\n    );\n}\n\nexport default HelpLinkComponent;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ControlGroup from '@splunk/react-ui/ControlGroup';\nimport styled from 'styled-components';\n\nimport MarkdownMessage from './MarkdownMessage';\nimport CONTROL_TYPE_MAP from '../constants/ControlTypeMap';\n\nconst CustomElement = styled.div`\n    margin-left: 30px;\n`;\n\nconst ControlGroupWrapper = styled(ControlGroup).attrs((props) => ({\n    'data-name': props.dataName,\n}))`\n    width: 100%;\n    max-width: 100%;\n\n    > * {\n        &:first-child {\n            width: 240px !important;\n        }\n        &:nth-child(3) {\n            margin-left: 270px !important;\n            width: 320px;\n        }\n    }\n\n    span[class*='ControlGroupStyles__StyledAsterisk-'] {\n        color: red;\n    }\n`;\n\nclass ControlWrapper extends React.PureComponent {\n    static isString = (str) => !!(typeof str === 'string' || str instanceof String);\n\n    constructor(props) {\n        super(props);\n        this.controlType = ControlWrapper.isString(props.entity.type)\n            ? CONTROL_TYPE_MAP[props.entity.type]\n            : null;\n    }\n\n    render() {\n        const {\n            field,\n            type,\n            label,\n            tooltip,\n            help,\n            encrypted = false,\n            required,\n        } = this.props.entity;\n        const { handleChange, addCustomValidator, utilCustomFunctions } = this.props.utilityFuncts;\n        // We have to put empty object because markDownMessage prop can be undefined\n        // because we are not explicitly setting it but expecting it from custom hooks only.\n        const { text, link, color, markdownType, token, linkText } =\n            this.props.markdownMessage || {};\n        let rowView;\n        if (this.props.entity.type === 'custom') {\n            const data = {\n                value: this.props.value,\n                mode: this.props.mode,\n                serviceName: this.props.serviceName,\n            };\n\n            rowView = this.controlType\n                ? React.createElement(this.controlType, {\n                      data,\n                      field,\n                      handleChange,\n                      addCustomValidator,\n                      utilCustomFunctions,\n                      controlOptions: this.props.entity.options,\n                  })\n                : `No View Found for ${type} type`;\n        } else {\n            rowView = this.controlType\n                ? React.createElement(this.controlType, {\n                      handleChange,\n                      value: this.props.value,\n                      field,\n                      controlOptions: this.props.entity.options,\n                      error: this.props.error,\n                      disabled: this.props.disabled,\n                      encrypted,\n                      dependencyValues: this.props.dependencyValues,\n                      required,\n                      addCustomValidator,\n                  })\n                : `No View Found for ${type} type`;\n        }\n\n        const helpText = (\n            <>\n                <MarkdownMessage\n                    text={text || ''}\n                    link={link || ''}\n                    color={color || ''}\n                    markdownType={markdownType || ''}\n                    token={token || ''}\n                    linkText={linkText || ''}\n                />\n                {help}\n            </>\n        );\n\n        return (\n            this.props.display && (\n                <ControlGroupWrapper\n                    label={label}\n                    help={helpText}\n                    tooltip={tooltip}\n                    error={this.props.error}\n                    dataName={field}\n                    required={required}\n                >\n                    <CustomElement>{rowView}</CustomElement>\n                </ControlGroupWrapper>\n            )\n        );\n    }\n}\n\nControlWrapper.propTypes = {\n    mode: PropTypes.string,\n    utilityFuncts: PropTypes.object,\n    value: PropTypes.any,\n    display: PropTypes.bool,\n    error: PropTypes.bool,\n    entity: PropTypes.object,\n    disabled: PropTypes.bool,\n    markdownMessage: PropTypes.object,\n    serviceName: PropTypes.string,\n    dependencyValues: PropTypes.object,\n};\n\nexport default ControlWrapper;\n","export const ERROR_REQUEST_TIMEOUT_TRY_AGAIN =\n    'Request time out while authenticating. Please try again.';\nexport const ERROR_REQUEST_TIMEOUT_ACCESS_TOKEN_TRY_AGAIN =\n    'Request time out while getting accesstoken. Please try again.';\nexport const ERROR_OCCURRED_TRY_AGAIN =\n    'Error occurred while trying to authenticate. Please try Again.';\nexport const ERROR_AUTH_PROCESS_TERMINATED_TRY_AGAIN =\n    'Authentication process interrupted. Please try again.';\nexport const ERROR_STATE_MISSING_TRY_AGAIN =\n    'Response not received from the expected sender. Please try again.';\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport Message from '@splunk/react-ui/Message';\n\nimport ControlWrapper from './ControlWrapper';\nimport Validator, { SaveValidator } from '../util/Validator';\nimport { getUnifiedConfigs, generateToast } from '../util/util';\nimport { MODE_CLONE, MODE_CREATE, MODE_EDIT, MODE_CONFIG } from '../constants/modes';\nimport { PAGE_INPUT, PAGE_CONF } from '../constants/pages';\nimport { axiosCallWrapper } from '../util/axiosCallWrapper';\nimport { parseErrorMsg, getFormattedMessage } from '../util/messageUtil';\nimport { getBuildDirPath } from '../util/script';\n\nimport {\n    ERROR_REQUEST_TIMEOUT_TRY_AGAIN,\n    ERROR_REQUEST_TIMEOUT_ACCESS_TOKEN_TRY_AGAIN,\n    ERROR_OCCURRED_TRY_AGAIN,\n    ERROR_AUTH_PROCESS_TERMINATED_TRY_AGAIN,\n    ERROR_STATE_MISSING_TRY_AGAIN,\n} from '../constants/oAuthErrorMessage';\nimport TableContext from '../context/TableContext';\nimport Group from './Group';\n\nfunction onCustomHookError(params) {\n    // eslint-disable-next-line no-console\n    console.error(\n        `[Custom Hook] Something went wrong while calling ${params.methodName}. Error: ${params.error?.name} ${params.error?.message}`\n    );\n}\n\nclass BaseFormView extends PureComponent {\n    static contextType = TableContext;\n\n    constructor(props, context) {\n        super(props);\n        // flag for to render hook method for once\n        this.flag = true;\n        this.state = {};\n        this.currentInput = {};\n        const globalConfig = getUnifiedConfigs();\n        this.appName = globalConfig.meta.name;\n        this.groupEntities = [];\n        this.endpoint =\n            props.mode === MODE_EDIT || props.mode === MODE_CONFIG\n                ? `${this.props.serviceName}/${encodeURIComponent(this.props.stanzaName)}`\n                : `${this.props.serviceName}`;\n\n        this.util = {\n            setState: (callback) => {\n                this.onSavePromise = new Promise((resolve) => {\n                    this.setState((previousState) => callback(previousState), resolve);\n                });\n            },\n            setErrorFieldMsg: this.setErrorFieldMsg,\n            clearAllErrorMsg: this.clearAllErrorMsg,\n            setErrorMsg: this.setErrorMsg,\n        };\n\n        this.utilControlWrapper = {\n            handleChange: this.handleChange,\n            addCustomValidator: this.addCustomValidator,\n            utilCustomFunctions: this.util,\n        };\n\n        if (props.page === PAGE_INPUT) {\n            globalConfig.pages.inputs.services.forEach((service) => {\n                if (service.name === props.serviceName) {\n                    this.groups = service.groups;\n                    this.entities = service.entity;\n                    this.updateGroupEntities();\n                    this.options = service.options;\n                    if (service.hook) {\n                        this.hookDeferred = this.loadHook(\n                            service.hook.src,\n                            service.hook.type,\n                            globalConfig\n                        );\n                    }\n                    if (props.mode === MODE_EDIT || props.mode === MODE_CLONE) {\n                        this.currentInput = context.rowData[props.serviceName][props.stanzaName];\n                    }\n                }\n            });\n        } else {\n            globalConfig.pages.configuration.tabs.forEach((tab) => {\n                const flag = tab.table\n                    ? tab.name === props.serviceName\n                    : tab.name === props.stanzaName && props.serviceName === 'settings';\n                if (flag) {\n                    this.entities = tab.entity;\n                    this.options = tab.options;\n                    if (tab.hook) {\n                        this.hookDeferred = this.loadHook(\n                            tab.hook.src,\n                            tab.hook.type,\n                            globalConfig\n                        );\n                    }\n                    if (tab.table && (props.mode === MODE_EDIT || props.mode === MODE_CLONE)) {\n                        this.currentInput = context.rowData[props.serviceName][props.stanzaName];\n                    } else if (props.mode === MODE_CONFIG) {\n                        this.currentInput = props.currentServiceState;\n                        this.mode_config_title = tab.title;\n                    } else {\n                        this.currentInput = context.rowData[props.serviceName];\n                    }\n                }\n            });\n        }\n        this.dependencyMap = new Map();\n        this.isOAuth = false;\n        this.isAuthVal = false;\n        this.authMap = {};\n        let temState = {};\n        const temEntities = [];\n\n        this.entities.forEach((e) => {\n            if (e.type === 'oauth') {\n                this.isOAuth = true;\n                if (props.page === PAGE_CONF && props.serviceName === 'account') {\n                    const authType = e?.options?.auth_type;\n                    this.isoauthState =\n                        typeof e?.options?.oauth_state_enabled !== 'undefined'\n                            ? e?.options?.oauth_state_enabled\n                            : null;\n\n                    if (authType.length > 1) {\n                        this.isAuthVal = true;\n                        // Defining state for auth_type in case of multiple Authentication\n                        const tempEntity = {};\n                        tempEntity.value =\n                            typeof this.currentInput.auth_type !== 'undefined'\n                                ? this.currentInput.auth_type\n                                : authType[0];\n                        tempEntity.display = true;\n                        tempEntity.error = false;\n                        tempEntity.disabled = false;\n                        temState.auth_type = tempEntity;\n\n                        // Defining Entity for auth_type in entitylist of globalConfig\n                        const entity = {};\n                        entity.field = 'auth_type';\n                        entity.type = 'singleSelect';\n                        entity.label = 'Auth Type';\n                        const content = {\n                            basic: 'Basic Authentication',\n                            oauth: 'OAuth 2.0 Authentication',\n                        };\n                        entity.options = {};\n                        entity.options.hideClearBtn = true;\n                        entity.options.autoCompleteFields = authType.map((type) => ({\n                            label: content[type],\n                            value: type,\n                        }));\n                        temEntities.push(entity);\n                    } else {\n                        this.isSingleOauth = authType.includes('oauth');\n                    }\n\n                    // Adding State and Entity(in entitylist) for every Fields of \"oauth\" type\n                    // Iterating over everytype of Authentication under \"oauth\" type\n                    authType.forEach((type) => {\n                        const authfields = [];\n                        const fields = e?.options[type];\n                        if (fields) {\n                            // For Particaular type iterating over fields\n                            fields.forEach((field) => {\n                                // every field for auth type\n                                const tempEntity = {};\n\n                                if (props.mode === MODE_CREATE) {\n                                    tempEntity.value =\n                                        typeof field?.defaultValue !== 'undefined'\n                                            ? field.defaultValue\n                                            : null;\n                                } else {\n                                    const isEncrypted =\n                                        typeof field?.encrypted !== 'undefined'\n                                            ? field?.encrypted\n                                            : false;\n                                    tempEntity.value = isEncrypted\n                                        ? ''\n                                        : this.currentInput[field.field];\n                                }\n                                tempEntity.display =\n                                    typeof temState.auth_type !== 'undefined'\n                                        ? type === temState.auth_type.value\n                                        : true;\n                                tempEntity.error = false;\n                                tempEntity.disabled = false;\n                                temState[field.field] = tempEntity;\n                                // eslint-disable-next-line no-param-reassign\n                                field.type =\n                                    typeof field?.type !== 'undefined' ? field.type : 'text';\n\n                                // Handled special case for redirect_url\n                                if (field.field === 'redirect_url') {\n                                    tempEntity.value = window.location.href\n                                        .split('?')[0]\n                                        .replace(\n                                            'configuration',\n                                            `${this.appName.toLowerCase()}_redirect`\n                                        );\n                                    tempEntity.disabled = true;\n                                }\n                                temEntities.push(field);\n                                authfields.push(field.field);\n                            });\n                            this.authMap[type] = authfields;\n                        }\n                    });\n                    if (authType.includes('oauth')) {\n                        const oauthConfData = {};\n                        // Storing O-Auth Configuration data to class variable to use later\n                        oauthConfData.popupWidth = e.options.oauth_popup_width\n                            ? e.options.oauth_popup_width\n                            : 600;\n                        oauthConfData.popupHeight = e.options.oauth_popup_height\n                            ? e.options.oauth_popup_height\n                            : 600;\n                        oauthConfData.authTimeout = e.options.oauth_timeout\n                            ? e.options.oauth_timeout\n                            : 180;\n                        oauthConfData.authCodeEndpoint = e.options.auth_code_endpoint\n                            ? e.options.auth_code_endpoint\n                            : null;\n                        oauthConfData.accessTokenEndpoint = e.options.access_token_endpoint\n                            ? e.options.access_token_endpoint\n                            : null;\n\n                        this.oauthConf = oauthConfData;\n                    }\n                }\n            } else {\n                const tempEntity = {};\n                e.encrypted = typeof e.encrypted !== 'undefined' ? e.encrypted : false;\n\n                if (props.mode === MODE_CREATE) {\n                    tempEntity.value =\n                        typeof e.defaultValue !== 'undefined' ? e.defaultValue : null;\n                    tempEntity.display =\n                        typeof e?.options?.display !== 'undefined' ? e.options.display : true;\n                    tempEntity.error = false;\n                    tempEntity.disabled = false;\n                    temState[e.field] = tempEntity;\n                } else if (props.mode === MODE_EDIT) {\n                    tempEntity.value =\n                        typeof this.currentInput[e.field] !== 'undefined'\n                            ? this.currentInput[e.field]\n                            : null;\n                    tempEntity.value = e.encrypted ? '' : tempEntity.value;\n                    tempEntity.display =\n                        typeof e?.options?.display !== 'undefined' ? e.options.display : true;\n                    tempEntity.error = false;\n                    tempEntity.disabled = false;\n                    if (e.field === 'name') {\n                        tempEntity.disabled = true;\n                    } else if (typeof e?.options?.disableonEdit !== 'undefined') {\n                        tempEntity.disabled = e.options.disableonEdit;\n                    }\n                    temState[e.field] = tempEntity;\n                } else if (props.mode === MODE_CLONE) {\n                    tempEntity.value =\n                        e.field === 'name' || e.encrypted ? '' : this.currentInput[e.field];\n                    tempEntity.display =\n                        typeof e?.options?.display !== 'undefined' ? e.options.display : true;\n                    tempEntity.error = false;\n                    tempEntity.disabled = false;\n                    temState[e.field] = tempEntity;\n                } else if (props.mode === MODE_CONFIG) {\n                    e.defaultValue = typeof e.defaultValue !== 'undefined' ? e.defaultValue : null;\n                    tempEntity.value =\n                        typeof this.currentInput[e.field] !== 'undefined'\n                            ? this.currentInput[e.field]\n                            : e.defaultValue;\n                    tempEntity.value = e.encrypted ? '' : tempEntity.value;\n                    tempEntity.display =\n                        typeof e?.options?.display !== 'undefined' ? e.options.display : true;\n                    tempEntity.error = false;\n                    tempEntity.disabled = false;\n                    if (e.field === 'name') {\n                        tempEntity.disabled = true;\n                    } else if (typeof e?.options?.disableonEdit !== 'undefined') {\n                        tempEntity.disabled = e.options.disableonEdit;\n                    }\n                    temState[e.field] = tempEntity;\n                } else {\n                    throw new Error('Invalid mode :', props.mode);\n                }\n\n                // handle dependent fields\n                const fields = e.options?.dependencies;\n                if (fields) {\n                    fields.forEach((field) => {\n                        const changeFields = this.dependencyMap.get(field);\n                        if (changeFields) {\n                            changeFields[e.field] = fields;\n                        } else {\n                            this.dependencyMap.set(field, {\n                                [e.field]: fields,\n                            });\n                        }\n                    });\n                }\n                temEntities.push(e);\n            }\n        });\n\n        this.entities = temEntities;\n\n        // flatten the dependencyMap to remove redundant iterations for resolving them\n        // one-by-one in following loop\n        let flattenedMap = {};\n        this.dependencyMap.forEach((value) => {\n            flattenedMap = { ...flattenedMap, ...value };\n        });\n\n        const changes = {};\n        Object.keys(flattenedMap).forEach((field) => {\n            const values = flattenedMap[field];\n            const data = {};\n            let load = true;\n\n            values.forEach((dependency) => {\n                const required = !!this.entities.find((e) => e.field === dependency).required;\n\n                const currentValue = temState[dependency].value;\n                if (required && !currentValue) {\n                    load = false;\n                    data[dependency] = null;\n                } else {\n                    data[dependency] = currentValue;\n                }\n            });\n\n            if (load) {\n                changes[field] = {\n                    dependencyValues: { $set: data },\n                };\n            }\n        });\n\n        // apply dependency field changes in state\n        temState = update(temState, changes);\n        this.state = {\n            data: temState,\n            errorMsg: '',\n            warningMsg: '',\n        };\n\n        // Hook on create method call\n        if (this.hookDeferred) {\n            this.hookDeferred.then(() => {\n                if (typeof this.hook.onCreate === 'function') {\n                    try {\n                        this.hook.onCreate();\n                    } catch (error) {\n                        onCustomHookError({ methodName: 'onCreate', error });\n                    }\n                }\n            });\n        }\n    }\n\n    updateGroupEntities = () => {\n        if (this.groups) {\n            this.groups.forEach((group) => {\n                group.fields.forEach((fieldName) => this.groupEntities.push(fieldName));\n            });\n        }\n    };\n\n    // eslint-disable-next-line react/no-unused-class-component-methods\n    handleSubmit = () => {\n        this.clearErrorMsg();\n        this.props.handleFormSubmit(/* isSubmitting */ true, /* closeEntity */ false);\n\n        this.datadict = {};\n\n        Object.keys(this.state.data).forEach((field) => {\n            this.datadict[field] = this.state.data[field].value;\n        });\n\n        if (this.hook && typeof this.hook.onSave === 'function') {\n            const validationPass = this.hook.onSave(this.datadict);\n            if (!validationPass) {\n                this.props.handleFormSubmit(/* isSubmitting */ false, /* closeEntity */ false);\n                return;\n            }\n        }\n        const executeValidationSubmit = () => {\n            Object.keys(this.state.data).forEach((field) => {\n                this.datadict[field] = this.state.data[field].value;\n            });\n\n            // validation for unique name\n            if ([MODE_CREATE, MODE_CLONE].includes(this.props.mode)) {\n                const isExistingName = Boolean(\n                    Object.values(this.context.rowData).find((val) =>\n                        Object.keys(val).find((name) => name === this.datadict.name)\n                    )\n                );\n\n                if (isExistingName) {\n                    const index = this.entities.findIndex((e) => e.field === 'name');\n                    this.setErrorFieldMsg(\n                        'name',\n                        getFormattedMessage(2, [this.entities[index].label, this.datadict.name])\n                    );\n                    this.props.handleFormSubmit(/* isSubmitting */ false, /* closeEntity */ false);\n                    return;\n                }\n            }\n\n            // validation condition of required fields in O-Auth\n            let temEntities;\n            if (this.isOAuth) {\n                let reqFields = [];\n                Object.keys(this.authMap).forEach((type) => {\n                    // `isAuthVal` is required in a case where only single auth type is provided\n                    if (type === this.datadict.auth_type || !this.isAuthVal) {\n                        reqFields = [...reqFields, ...this.authMap[type]];\n                    }\n                });\n                temEntities = this.entities.map((e) => {\n                    if (reqFields.includes(e.field)) {\n                        // All oauth fields are required except if explicitely `required` is set to `false`\n                        return { required: true, ...e };\n                    }\n                    return e;\n                });\n            } else {\n                temEntities = this.entities;\n            }\n\n            // Validation of form fields on Submit\n            const validator = new Validator(temEntities);\n            let error = validator.doValidation(this.datadict);\n            if (error) {\n                this.setErrorFieldMsg(error.errorField, error.errorMsg);\n            } else if (this.options && this.options.saveValidator) {\n                error = SaveValidator(this.options.saveValidator, this.datadict);\n                if (error) {\n                    this.setErrorMsg(error.errorMsg);\n                }\n            }\n\n            if (error) {\n                this.props.handleFormSubmit(/* isSubmitting */ false, /* closeEntity */ false);\n            } else if (\n                this.isOAuth &&\n                (this.isSingleOauth || (this.isAuthVal && this.datadict.auth_type === 'oauth'))\n            ) {\n                // handle oauth Authentication\n                // Populate the parameter string with client_id, redirect_url and response_type\n                let parameters = `?response_type=code&client_id=${this.datadict.client_id}&redirect_uri=${this.datadict.redirect_url}`;\n                // Get the value for state_enabled\n                const stateEnabled = this.isoauthState != null ? this.isoauthState : false;\n                if (stateEnabled === 'true' || stateEnabled === true) {\n                    this.state_enabled = true;\n                    // Generating a cryptographically strong state parameter, which will be used ONLY during configuration\n                    this.oauth_state = uuidv4().replace(/-/g, '');\n\n                    // Appending the state in the headers\n                    parameters = `${parameters}&state=${this.oauth_state}`;\n                }\n\n                if (this.datadict.scope) {\n                    parameters = `${parameters}&scope=${this.datadict.scope}`;\n                }\n\n                let host = encodeURI(\n                    `https://${this.datadict.endpoint}${this.oauthConf.authCodeEndpoint}${parameters}`\n                );\n                const redirectURI = new URLSearchParams(host).get('redirect_uri');\n                host = host.replace(redirectURI, encodeURIComponent(redirectURI));\n\n                (async () => {\n                    this.isCalled = false;\n                    this.isError = false;\n                    this.isResponse = false;\n                    // Get auth_type element from global config json\n\n                    // Open a popup to make auth request\n                    this.childWin = window.open(\n                        host,\n                        `${this.appName} OAuth`,\n                        `width=${this.oauthConf.popupWidth}, height=${this.oauthConf.popupHeight}`\n                    );\n                    // Callback to receive data from redirect url\n                    window.getMessage = (message) => {\n                        this.isCalled = true;\n                        // On Call back with Auth code this method will be called.\n                        this.handleOauthToken(message);\n                    };\n                    // Wait till we get auth_code from calling site through redirect url, we will wait for 3 mins\n                    await this.waitForAuthentication(this.oauthConf.authTimeout);\n\n                    if (!this.isCalled && this.childWin.closed) {\n                        // Add error message if the user has close the authentication window without taking any action\n                        this.setErrorMsg(ERROR_AUTH_PROCESS_TERMINATED_TRY_AGAIN);\n                        this.props.handleFormSubmit(\n                            /* isSubmitting */ false,\n                            /* closeEntity */ false\n                        );\n                        return false;\n                    }\n\n                    if (!this.isCalled) {\n                        // Add timeout error message\n                        this.setErrorMsg(ERROR_REQUEST_TIMEOUT_TRY_AGAIN);\n                        this.props.handleFormSubmit(\n                            /* isSubmitting */ false,\n                            /* closeEntity */ false\n                        );\n                        return false;\n                    }\n\n                    // Reset called flag as we have to wait till we get the access_token, refresh_token and instance_url\n                    // Wait till we get the response, here we have added wait for 30 secs\n                    await this.waitForBackendResponse(30);\n\n                    if (!this.isResponse && !this.isError) {\n                        // Set error message to prevent saving.\n                        this.isError = true;\n\n                        // Add timeout error message\n                        this.setErrorMsg(ERROR_REQUEST_TIMEOUT_ACCESS_TOKEN_TRY_AGAIN);\n                        this.props.handleFormSubmit(\n                            /* isSubmitting */ false,\n                            /* closeEntity */ false\n                        );\n                        return false;\n                    }\n                    return true;\n                })().then(() => {\n                    if (!this.isError) {\n                        this.saveData();\n                    } else {\n                        this.props.handleFormSubmit(\n                            /* isSubmitting */ false,\n                            /* closeEntity */ false\n                        );\n                    }\n                });\n            } else {\n                this.saveData();\n            }\n        };\n        if (\n            this.hook &&\n            typeof this.hook.onSave === 'function' &&\n            typeof this.onSavePromise !== 'undefined'\n        ) {\n            this.onSavePromise.then(() => {\n                executeValidationSubmit();\n            });\n        } else {\n            executeValidationSubmit();\n        }\n    };\n\n    saveData = () => {\n        const body = new URLSearchParams();\n        Object.keys(this.datadict).forEach((key) => {\n            if (this.datadict[key] != null) {\n                // Custom logic for only sending file content in payload, not file name and file size.\n                if (\n                    typeof this.datadict[key] === 'object' &&\n                    this.entities.find((x) => x.field === key).type === 'file'\n                ) {\n                    body.append(key, this.datadict[key].fileContent);\n                } else {\n                    body.append(key, this.datadict[key]);\n                }\n            }\n        });\n\n        // clear out fields of other authentication methods when using one\n        if (this.isAuthVal) {\n            Object.keys(this.authMap).forEach((type) => {\n                if (this.datadict.auth_type !== type) {\n                    this.authMap[type].forEach((e) => {\n                        body.set(e, '');\n                    });\n                }\n            });\n        }\n\n        if (this.isOAuth) {\n            // Prevent passing redirect_url field used in OAuth to backend conf file\n            body.delete('redirect_url');\n        }\n        if (this.props.mode === MODE_EDIT) {\n            body.delete('name');\n        }\n\n        axiosCallWrapper({\n            serviceName: this.endpoint,\n            body,\n            customHeaders: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            method: 'post',\n            handleError: false,\n        })\n            .then((response) => {\n                const val = response?.data?.entry[0];\n                if (this.props.mode !== MODE_CONFIG) {\n                    const tmpObj = {};\n\n                    tmpObj[val.name] = {\n                        // ADDON-38581: `datadict` provides fallback values if rh skips\n                        ...this.datadict,\n                        ...val.content,\n                        id: val.id,\n                        name: val.name,\n                        serviceName: this.props.serviceName,\n                    };\n\n                    this.context.setRowData(\n                        update(this.context.rowData, {\n                            [this.props.serviceName]: { $merge: tmpObj },\n                        })\n                    );\n                }\n                if (this.hook && typeof this.hook.onSaveSuccess === 'function') {\n                    this.hook.onSaveSuccess();\n                }\n                if (this.props.mode === MODE_EDIT) {\n                    generateToast(`Updated \"${val.name}\"`, 'success');\n                } else if (this.props.mode === MODE_CONFIG) {\n                    generateToast(\n                        `Updated \"${this.mode_config_title ? this.mode_config_title : val.name}\"`,\n                        'success'\n                    );\n                } else {\n                    generateToast(`Created \"${val.name}\"`, 'success');\n                }\n                this.props.handleFormSubmit(/* isSubmitting */ false, /* closeEntity */ true);\n            })\n            .catch((err) => {\n                const errorSubmitMsg = parseErrorMsg(err);\n                this.setState({ errorMsg: errorSubmitMsg });\n                if (this.hook && typeof this.hook.onSaveFail === 'function') {\n                    this.hook.onSaveFail();\n                }\n                this.props.handleFormSubmit(/* isSubmitting */ false, /* closeEntity */ false);\n            });\n    };\n\n    handleChange = (field, targetValue) => {\n        const changes = {};\n        if (field === 'auth_type') {\n            Object.keys(this.authMap).forEach((type) => {\n                if (type === targetValue) {\n                    this.authMap[type].forEach((e) => {\n                        changes[e] = { display: { $set: true } };\n                    });\n                } else {\n                    this.authMap[type].forEach((e) => {\n                        changes[e] = { display: { $set: false } };\n                    });\n                }\n            });\n        }\n\n        if (this.dependencyMap.has(field)) {\n            const value = this.dependencyMap.get(field);\n            Object.keys(value).forEach((loadField) => {\n                const data = {};\n                let load = true;\n\n                value[loadField].forEach((dependency) => {\n                    const required = !!this.entities.find((e) => e.field === dependency).required;\n\n                    const currentValue =\n                        dependency === field ? targetValue : this.state.data[dependency].value;\n                    if (required && !currentValue) {\n                        load = false;\n                        data[dependency] = null;\n                    } else {\n                        data[dependency] = currentValue;\n                    }\n                });\n\n                if (load) {\n                    changes[loadField] = {\n                        dependencyValues: { $set: data },\n                        value: { $set: null },\n                    };\n                }\n            });\n        }\n\n        changes[field] = { value: { $set: targetValue } };\n\n        const newFields = update(this.state, { data: changes });\n        const tempState = this.clearAllErrorMsg(newFields);\n        this.setState(tempState);\n\n        if (this.hookDeferred) {\n            this.hookDeferred.then(() => {\n                if (typeof this.hook.onChange === 'function') {\n                    this.hook.onChange(field, targetValue, tempState);\n                }\n            });\n        }\n    };\n\n    addCustomValidator = (field, validatorFunc) => {\n        const index = this.entities.findIndex((x) => x.field === field);\n        const validator = [{ type: 'custom', validatorFunc }];\n        this.entities[index].validators = validator;\n    };\n\n    // Set error message to display and set error in perticular field\n    setErrorFieldMsg = (field, msg) => {\n        this.setState((previousState) => {\n            const newFields = update(previousState, {\n                data: { [field]: { error: { $set: true } } },\n            });\n            newFields.errorMsg = msg;\n            return newFields;\n        });\n    };\n\n    // Set error in perticular field\n    // eslint-disable-next-line react/no-unused-class-component-methods\n    setErrorField = (field) => {\n        this.setState((previousState) =>\n            update(previousState, { data: { [field]: { error: { $set: true } } } })\n        );\n    };\n\n    // Clear error message\n    clearErrorMsg = () => {\n        if (this.state.errorMsg) {\n            this.setState((previousState) => ({ ...previousState, errorMsg: '' }));\n        }\n    };\n\n    // Set error message\n    setErrorMsg = (msg) => {\n        this.setState((previousState) => ({ ...previousState, errorMsg: msg }));\n    };\n\n    // Clear error/warning message and errors from fields\n    clearAllErrorMsg = (State) => {\n        const newFields = State ? { ...State } : { ...this.state };\n        newFields.errorMsg = '';\n        newFields.warningMsg = '';\n        const newData = State ? { ...State.data } : { ...this.state.data };\n        const temData = {};\n        Object.keys(newData).forEach((key) => {\n            if (newData[key].error) {\n                temData[key] = { ...newData[key], error: false };\n            } else {\n                temData[key] = newData[key];\n            }\n        });\n        newFields.data = temData;\n        return State ? newFields : null;\n    };\n\n    // Display error message\n    generateErrorMessage = () => {\n        if (this.state.errorMsg) {\n            return (\n                <Message appearance=\"fill\" type=\"error\">\n                    {this.state.errorMsg}\n                </Message>\n            );\n        }\n        return null;\n    };\n\n    generateWarningMessage = () => {\n        if (this.state.warningMsg) {\n            return (\n                <Message appearance=\"fill\" type=\"warning\">\n                    {this.state.warningMsg}\n                </Message>\n            );\n        }\n        return null;\n    };\n\n    // generatesubmitMessage\n    loadHook = (module, type, globalConfig) => {\n        const myPromise = new Promise((resolve) => {\n            if (type === 'external') {\n                import(/* webpackIgnore: true */ `${getBuildDirPath()}/custom/${module}.js`).then(\n                    (external) => {\n                        const Hook = external.default;\n                        this.hook = new Hook(\n                            globalConfig,\n                            this.props.serviceName,\n                            this.state,\n                            this.props.mode,\n                            this.util,\n                            this.props.groupName\n                        );\n                        resolve(Hook);\n                    }\n                );\n            } else {\n                __non_webpack_require__(\n                    [`app/${this.appName}/js/build/custom/${module}`],\n                    (Hook) => {\n                        this.hook = new Hook(\n                            globalConfig,\n                            this.props.serviceName,\n                            this.state,\n                            this.props.mode,\n                            this.util\n                        );\n                        resolve(Hook);\n                    }\n                );\n            }\n        });\n        return myPromise;\n    };\n\n    /*\n     * Function to get access token, refresh token and instance url\n     * using rest call once oauth code received from child window\n     */\n    // eslint-disable-next-line consistent-return\n    handleOauthToken = (message) => {\n        // Check message for error. If error show error message.\n        if (!message || (message && message.error) || message.code === undefined) {\n            this.setErrorMsg(ERROR_OCCURRED_TRY_AGAIN);\n            this.isError = true;\n            this.isResponse = true;\n            return false;\n        }\n        const stateResponse = message.state;\n\n        if (this.state_enabled === true && this.oauth_state !== stateResponse) {\n            this.setErrorMsg(ERROR_STATE_MISSING_TRY_AGAIN);\n            this.isError = true;\n            this.isResponse = true;\n            return false;\n        }\n\n        const code = decodeURIComponent(message.code);\n        const data = {\n            method: 'POST',\n            url: `https://${this.datadict.endpoint}${this.oauthConf.accessTokenEndpoint}`,\n            grant_type: 'authorization_code',\n            client_id: this.datadict.client_id,\n            client_secret: this.datadict.client_secret,\n            code,\n            redirect_uri: this.datadict.redirect_url,\n        };\n\n        if (this.datadict.scope) {\n            data.scope = this.datadict.scope;\n        }\n\n        const body = new URLSearchParams();\n        Object.keys(data).forEach((key) => {\n            body.append(key, data[key]);\n        });\n\n        const OAuthEndpoint = `${this.appName}_oauth/oauth`;\n        // Internal handler call to get the access token and other values\n        axiosCallWrapper({\n            endpointUrl: OAuthEndpoint,\n            body,\n            customHeaders: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            method: 'post',\n            handleError: false,\n        })\n            .then((response) => {\n                if (response.data.entry[0].content.error === undefined) {\n                    const accessToken = response.data.entry[0].content.access_token;\n                    const instanceUrl = response.data.entry[0].content.instance_url;\n                    const refreshToken = response.data.entry[0].content.refresh_token;\n\n                    this.datadict.instance_url = instanceUrl;\n                    this.datadict.refresh_token = refreshToken;\n                    this.datadict.access_token = accessToken;\n                    this.isResponse = true;\n                    return true;\n                }\n                this.setErrorMsg(response.data.entry[0].content.error);\n                this.isError = true;\n                this.isResponse = true;\n                return false;\n            })\n            .catch(() => {\n                this.setErrorMsg(ERROR_OCCURRED_TRY_AGAIN);\n                this.isError = true;\n                this.isResponse = true;\n                return false;\n            });\n    };\n\n    // Function to wait for authentication call back in child window.\n    // eslint-disable-next-line consistent-return\n    waitForAuthentication = async (count) => {\n        // eslint-disable-next-line no-param-reassign\n        count -= 1;\n        // Check if callback function called if called then exit from wait\n        if (this.isCalled === true) {\n            return true;\n        }\n        // If callback function is not called and count is not reached to 180 then return error for timeout\n        if (count === 0 || this.childWin.closed) {\n            this.isError = true;\n            return false;\n        }\n        // else call sleep and recall the same function\n        await this.sleep(this.waitForAuthentication, count);\n    };\n\n    // Function to wait for backend call get response from backend\n\n    // eslint-disable-next-line consistent-return\n    waitForBackendResponse = async (count) => {\n        // eslint-disable-next-line no-param-reassign\n        count += 1;\n        // Check if callback function called if called then exit from wait\n        if (this.isResponse === true) {\n            return true;\n        }\n        // If callback function is not called and count is not reached to 60 then return error for timeout\n        if (count === 60) {\n            return false;\n        }\n        // else call sleep and recall the same function\n        await this.sleep(this.waitForBackendResponse, count);\n    };\n\n    /*\n     * This function first add sleep for 1 secs and the call the function passed in argument\n     */\n    sleep = async (fn, ...args) => {\n        await this.timeout(1000);\n        return fn(...args);\n    };\n\n    /*\n     * This function will resolve the promise once the provided timeout occurs\n     */\n    // eslint-disable-next-line class-methods-use-this\n    timeout = (ms) => new Promise((resolve) => setTimeout(resolve, ms)); // eslint-disable-line no-promise-executor-return\n\n    renderGroupElements = () => {\n        let el = null;\n        if (this.groups && this.groups.length) {\n            el = this.groups.map((group) => {\n                const collapsibleElement =\n                    group.fields?.length &&\n                    group.fields.map((fieldName) =>\n                        this.entities.map((e) => {\n                            if (e.field === fieldName) {\n                                const temState = this.state.data[e.field];\n                                return (\n                                    <ControlWrapper\n                                        key={e.field}\n                                        utilityFuncts={this.utilControlWrapper}\n                                        value={temState.value}\n                                        display={temState.display}\n                                        error={temState.error}\n                                        entity={e}\n                                        serviceName={this.props.serviceName}\n                                        mode={this.props.mode}\n                                        disabled={temState.disabled}\n                                        markdownMessage={temState.markdownMessage}\n                                        dependencyValues={temState.dependencyValues || null}\n                                    />\n                                );\n                            }\n                            return null;\n                        })\n                    );\n\n                return (\n                    <Group\n                        isExpandable={group.options?.isExpandable}\n                        defaultOpen={group.options?.expand}\n                        title={group.label}\n                    >\n                        {collapsibleElement}\n                    </Group>\n                );\n            });\n        }\n        return el;\n    };\n\n    render() {\n        // onRender method of Hook\n        if (this.flag) {\n            if (this.hookDeferred) {\n                this.hookDeferred.then(() => {\n                    if (typeof this.hook.onRender === 'function') {\n                        try {\n                            this.hook.onRender();\n                        } catch (error) {\n                            onCustomHookError({ methodName: 'onRender', error });\n                        }\n                    }\n                });\n            }\n\n            if (this.props.mode === MODE_EDIT) {\n                if (this.hookDeferred) {\n                    this.hookDeferred.then(() => {\n                        if (typeof this.hook.onEditLoad === 'function') {\n                            try {\n                                this.hook.onEditLoad();\n                            } catch (error) {\n                                onCustomHookError({ methodName: 'onEditLoad', error });\n                            }\n                        }\n                    });\n                }\n            }\n            this.flag = false;\n        }\n        return (\n            <div>\n                <form style={this.props.mode === MODE_CONFIG ? { marginTop: '25px' } : {}}>\n                    {this.generateWarningMessage()}\n                    {this.generateErrorMessage()}\n                    {this.entities.map((e) => {\n                        // Return null if we need to show element in a group\n                        if (this.groupEntities.includes(e.field)) {\n                            return null;\n                        }\n\n                        const temState = this.state.data[e.field];\n\n                        if (!temState) return null;\n\n                        return (\n                            <ControlWrapper\n                                key={e.field}\n                                utilityFuncts={this.utilControlWrapper}\n                                value={temState.value}\n                                display={temState.display}\n                                error={temState.error}\n                                entity={e}\n                                serviceName={this.props.serviceName}\n                                mode={this.props.mode}\n                                disabled={temState.disabled}\n                                markdownMessage={temState.markdownMessage}\n                                dependencyValues={temState.dependencyValues || null}\n                            />\n                        );\n                    })}\n                    {this.renderGroupElements()}\n                </form>\n            </div>\n        );\n    }\n}\n\nBaseFormView.propTypes = {\n    page: PropTypes.string,\n    serviceName: PropTypes.string,\n    stanzaName: PropTypes.string,\n    currentServiceState: PropTypes.object,\n    mode: PropTypes.string,\n    handleFormSubmit: PropTypes.func,\n    groupName: PropTypes.string,\n};\n\nexport default BaseFormView;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from '@splunk/react-ui/Modal';\nimport styled from 'styled-components';\nimport WaitSpinner from '@splunk/react-ui/WaitSpinner';\nimport { _ } from '@splunk/ui-utils/i18n';\n\nimport { MODE_CLONE, MODE_CREATE, MODE_EDIT } from '../constants/modes';\nimport { StyledButton } from '../pages/EntryPageStyle';\nimport BaseFormView from './BaseFormView';\n\nconst ModalWrapper = styled(Modal)`\n    width: 800px;\n`;\n\nclass EntityModal extends Component {\n    constructor(props) {\n        super(props);\n        // Ref is used here to call submit method of form only\n        this.form = React.createRef(); // nosemgrep: typescript.react.security.audit.react-no-refs.react-no-refs\n        this.state = { isSubmititng: false };\n\n        if (props.mode === MODE_CREATE) {\n            this.buttonText = _('Add');\n        } else if (props.mode === MODE_CLONE) {\n            this.buttonText = _('Save');\n        } else if (props.mode === MODE_EDIT) {\n            this.buttonText = _('Update');\n        } else {\n            this.buttonText = _('Submit');\n        }\n    }\n\n    handleRequestClose = () => {\n        this.props.handleRequestClose();\n    };\n\n    handleSubmit = () => {\n        const result = this.form.current.handleSubmit();\n        if (result) {\n            this.handleRequestClose();\n        }\n    };\n\n    /*\n     * @param {boolean} set: whether form is submitting\n     * @param {boolean} close : close the Entity modal\n     */\n    handleFormSubmit = (set, close) => {\n        this.setState({ isSubmititng: set });\n        if (close) {\n            this.handleRequestClose();\n        }\n    };\n\n    render() {\n        return (\n            <ModalWrapper open={this.props.open}>\n                <Modal.Header\n                    title={this.props.formLabel}\n                    onRequestClose={this.handleRequestClose}\n                />\n                <Modal.Body>\n                    <BaseFormView // nosemgrep: typescript.react.security.audit.react-no-refs.react-no-refs\n                        ref={this.form}\n                        page={this.props.page}\n                        serviceName={this.props.serviceName}\n                        mode={this.props.mode}\n                        stanzaName={this.props.stanzaName}\n                        handleFormSubmit={this.handleFormSubmit}\n                        groupName={this.props.groupName}\n                    />\n                </Modal.Body>\n                <Modal.Footer>\n                    <StyledButton\n                        appearance=\"secondary\"\n                        onClick={this.handleRequestClose}\n                        label={_('Cancel')}\n                        disabled={this.state.isSubmititng}\n                    />\n                    <StyledButton\n                        className=\"saveBtn\"\n                        appearance=\"primary\"\n                        label={this.state.isSubmititng ? <WaitSpinner /> : this.buttonText}\n                        onClick={this.handleSubmit}\n                        disabled={this.state.isSubmititng}\n                    />\n                </Modal.Footer>\n            </ModalWrapper>\n        );\n    }\n}\n\nEntityModal.propTypes = {\n    page: PropTypes.string,\n    open: PropTypes.bool,\n    handleRequestClose: PropTypes.func,\n    serviceName: PropTypes.string,\n    mode: PropTypes.string,\n    stanzaName: PropTypes.string,\n    formLabel: PropTypes.string,\n    groupName: PropTypes.string,\n};\n\nexport default EntityModal;\n","import React, { memo, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Link from '@splunk/react-ui/Link';\nimport WaitSpinner from '@splunk/react-ui/WaitSpinner';\nimport ColumnLayout from '@splunk/react-ui/ColumnLayout';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport { useSplunkTheme } from '@splunk/themes';\n\nimport { MODE_CLONE, MODE_CREATE, MODE_EDIT } from '../constants/modes';\nimport BaseFormView from './BaseFormView';\nimport { SubTitleComponent } from '../pages/Input/InputPageStyle';\nimport { PAGE_INPUT } from '../constants/pages';\nimport { StyledButton } from '../pages/EntryPageStyle';\n\nfunction EntityPage({\n    handleRequestClose,\n    serviceName,\n    mode,\n    stanzaName,\n    formLabel,\n    page,\n    groupName,\n}) {\n    // Ref is used here to call submit method of form only\n    const form = useRef(); // nosemgrep: typescript.react.security.audit.react-no-refs.react-no-refs\n    const [isSubmitting, setIsSubmitting] = useState(false);\n    let buttonText = _('Submit');\n\n    if (mode === MODE_CREATE) {\n        buttonText = _('Add');\n    } else if (mode === MODE_CLONE) {\n        buttonText = _('Clone Input');\n    } else if (mode === MODE_EDIT) {\n        buttonText = _('Update');\n    }\n\n    const { embossShadow } = useSplunkTheme();\n    const colStyle = {\n        boxShadow: embossShadow,\n        padding: '1%',\n        backgroundColor: 'white',\n    };\n\n    const handleSubmit = () => {\n        const result = form.current.handleSubmit();\n        if (result) {\n            handleRequestClose();\n        }\n    };\n\n    const handleFormSubmit = (set, close) => {\n        setIsSubmitting(set);\n        if (close) {\n            handleRequestClose();\n        }\n    };\n    return (\n        <ColumnLayout gutter={8}>\n            <ColumnLayout.Row style={{ padding: '5px 0px' }}>\n                <ColumnLayout.Column>\n                    <SubTitleComponent>\n                        <Link onClick={handleRequestClose}>\n                            {page === PAGE_INPUT ? _('Inputs') : _('Configuration')}\n                        </Link>\n                        {' > '}\n                        {_(formLabel)}\n                    </SubTitleComponent>\n                </ColumnLayout.Column>\n            </ColumnLayout.Row>\n            <ColumnLayout.Row>\n                <ColumnLayout.Column span={2} />\n                <ColumnLayout.Column span={8} style={colStyle}>\n                    <BaseFormView // nosemgrep: typescript.react.security.audit.react-no-refs.react-no-refs\n                        ref={form}\n                        page={page}\n                        serviceName={serviceName}\n                        mode={mode}\n                        stanzaName={stanzaName}\n                        handleFormSubmit={handleFormSubmit}\n                        groupName={groupName}\n                    />\n                </ColumnLayout.Column>\n                <ColumnLayout.Column span={2} />\n            </ColumnLayout.Row>\n            <ColumnLayout.Row>\n                <ColumnLayout.Column span={7} />\n                <ColumnLayout.Column span={3} style={{ textAlign: 'right' }}>\n                    <StyledButton\n                        appearance=\"secondary\"\n                        onClick={handleRequestClose}\n                        label={_('Cancel')}\n                        disabled={isSubmitting}\n                        style={{ width: '80px' }}\n                    />\n                    <StyledButton\n                        appearance=\"primary\"\n                        label={isSubmitting ? <WaitSpinner /> : buttonText}\n                        onClick={handleSubmit}\n                        disabled={isSubmitting}\n                        style={{ width: '80px' }}\n                    />\n                </ColumnLayout.Column>\n                <ColumnLayout.Column span={2} />\n            </ColumnLayout.Row>\n        </ColumnLayout>\n    );\n}\n\nEntityPage.propTypes = {\n    handleRequestClose: PropTypes.func,\n    serviceName: PropTypes.string,\n    mode: PropTypes.string,\n    stanzaName: PropTypes.string,\n    formLabel: PropTypes.string,\n    page: PropTypes.string,\n    groupName: PropTypes.string,\n};\n\nexport default memo(EntityPage);\n","import React from 'react';\nimport Link from '@splunk/react-ui/Link';\n\nexport default {\n    ERR0001: (\n        <>\n            This is normal on Splunk search heads as they do not require an Input page. Check your\n            installation or return to the <Link to=\"configuration\">configuration page</Link>.\n        </>\n    ),\n    ERR0002:\n        'Configuration page failed to load, the server reported internal errors which may indicate you do not have access to this page.',\n    ERR0003: 'Failed to load content due to no response from server!',\n    ERR0004: 'Failed to load content due to failed request processing!',\n    ERR0005: 'Failed to load current state for selected entity in form!',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Heading from '@splunk/react-ui/Heading';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport Card from '@splunk/react-ui/Card';\nimport WarningIcon from '@splunk/react-icons/enterprise/Warning';\nimport errorCodes from '../constants/errorCodes';\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { errorCode: null, error: null };\n    }\n\n    static getDerivedStateFromError(error) {\n        // Update state so the next render will show the fallback UI.\n        return { errorCode: error.uccErrorCode };\n    }\n\n    componentDidCatch(error) {\n        // Catch errors in any components below and re-render with error message\n        this.setState({\n            error,\n        });\n        // You can also log error messages to an error reporting service here\n    }\n\n    render() {\n        if (this.state.error) {\n            // Error path\n            return (\n                <div style={{ marginTop: '10%' }}>\n                    <Card style={{ boxShadow: '10px 10px 5px #aaaaaa' }}>\n                        <Card.Header>\n                            <Heading style={{ textAlign: 'center' }} level={2}>\n                                <WarningIcon style={{ fontSize: '120px', color: '#ff9900' }} />\n                                <br />\n                                <br />\n                                {this.state.errorCode === 'ERR0001'\n                                    ? _('Failed to load Inputs Page')\n                                    : _('Something went wrong!')}\n                            </Heading>\n                        </Card.Header>\n                        <Card.Body>\n                            {this.state.errorCode ? (\n                                <>\n                                    {_(errorCodes[this.state.errorCode])}\n                                    <br />\n                                    <br />\n                                </>\n                            ) : null}\n                            <details style={{ whiteSpace: 'pre-wrap' }}>\n                                {this.state.error?.toString()}\n                            </details>\n                        </Card.Body>\n                        <Card.Footer showBorder={false}>\n                            {this.state.errorCode ? this.state.errorCode : null}\n                        </Card.Footer>\n                    </Card>\n                </div>\n            );\n        }\n        // Normally, just render children\n        return this.props.children;\n    }\n}\n\nErrorBoundary.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n};\n\nexport default ErrorBoundary;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { _ } from '@splunk/ui-utils/i18n';\n\nimport { getUnifiedConfigs } from '../../util/util';\nimport { getBuildDirPath } from '../../util/script';\n\nfunction onCustomControlError(params) {\n    // eslint-disable-next-line no-console\n    console.error(\n        `[Custom Control] Something went wrong while calling ${params.methodName}. Error: ${params.error?.name} ${params.error?.message}`\n    );\n}\n\nclass CustomTableControl extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n        };\n        this.shouldRender = true;\n    }\n\n    componentDidMount() {\n        const globalConfig = getUnifiedConfigs();\n        this.setState({ loading: true });\n        this.loadCustomControl().then((Control) => {\n            this.customControl = new Control(\n                globalConfig,\n                this.props.serviceName,\n                this.el,\n                this.props.row,\n                this.props.field\n            );\n            this.setState({ loading: false });\n        });\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (this.props.row !== nextProps.row) {\n            return true;\n        }\n        if (!nextState.loading && this.shouldRender) {\n            this.shouldRender = false;\n            return true;\n        }\n        return false;\n    }\n\n    loadCustomControl = () =>\n        new Promise((resolve) => {\n            if (this.props.type === 'external') {\n                import(\n                    /* webpackIgnore: true */ `${getBuildDirPath()}/custom/${\n                        this.props.fileName\n                    }.js`\n                ).then((external) => {\n                    const Control = external.default;\n                    resolve(Control);\n                });\n            } else {\n                const globalConfig = getUnifiedConfigs();\n                const appName = globalConfig.meta.name;\n                __non_webpack_require__(\n                    [`app/${appName}/js/build/custom/${this.props.fileName}`],\n                    (Control) => resolve(Control)\n                );\n            }\n        });\n\n    render() {\n        if (!this.state.loading) {\n            try {\n                this.customControl.render(this.props.row, this.props.field);\n            } catch (error) {\n                onCustomControlError({ methodName: 'render', error });\n            }\n        }\n        return (\n            <>\n                {this.state.loading && _('Loading...')}\n                {\n                    <span // nosemgrep: typescript.react.security.audit.react-no-refs.react-no-refs\n                        ref={(el) => {\n                            this.el = el;\n                        }}\n                        style={{ visibility: this.state.loading ? 'hidden' : 'visible' }}\n                    />\n                }\n            </>\n        );\n    }\n}\n\nCustomTableControl.propTypes = {\n    serviceName: PropTypes.string.isRequired,\n    row: PropTypes.object.isRequired,\n    field: PropTypes.string,\n    fileName: PropTypes.string.isRequired,\n    type: PropTypes.string,\n};\n\nexport default CustomTableControl;\n","import React from 'react';\nimport DL from '@splunk/react-ui/DefinitionList';\nimport Table from '@splunk/react-ui/Table';\nimport Button from '@splunk/react-ui/Button';\nimport styled from 'styled-components';\nimport { _ } from '@splunk/ui-utils/i18n';\n\nimport CustomTableControl from './CustomTableControl';\nimport { getUnifiedConfigs } from '../../util/util';\n\nconst TableCellWrapper = styled(Table.Cell)`\n    border-top: none;\n`;\n\nfunction getExpansionRowData(row, moreInfo) {\n    const DefinitionLists = [];\n\n    if (moreInfo?.length) {\n        moreInfo.forEach((val) => {\n            const label = _(val.label);\n            // remove extra rows which are empty in moreInfo\n            if (val.field in row && row[val.field] !== null && row[val.field] !== '') {\n                DefinitionLists.push(<DL.Term key={val.field}>{label}</DL.Term>);\n                DefinitionLists.push(\n                    <DL.Description key={`${val.field}_decr`}>\n                        {val.mapping && val.mapping[row[val.field]]\n                            ? val.mapping[row[val.field]]\n                            : String(row[val.field])}\n                    </DL.Description>\n                );\n            }\n        });\n    }\n    return DefinitionLists;\n}\n\nexport function getExpansionRow(colSpan, row, moreInfo) {\n    const inputs = getUnifiedConfigs().pages?.inputs;\n\n    const customRow = inputs?.table\n        ? inputs.table.customRow\n        : inputs.services.find((service) => service.name === row.serviceName).table?.customRow;\n\n    return (\n        <Table.Row key={`${row.id}-expansion`} style={{ wordBreak: 'break-word' }}>\n            <TableCellWrapper colSpan={colSpan}>\n                {customRow && customRow.src ? (\n                    <>\n                        {React.createElement(CustomTableControl, {\n                            serviceName: row.serviceName,\n                            row,\n                            fileName: customRow.src,\n                            type: customRow.type,\n                        })}\n                    </>\n                ) : (\n                    <>\n                        <DL termWidth={250}>{getExpansionRowData(row, moreInfo)}</DL>\n                        <Button\n                            to={`/app/search/search?q=search%20index%3D_internal%20source%3D*${row.name}*`}\n                            openInNewContext\n                            label={_(`Show ${row.name} input events`)}\n                        />\n                    </>\n                )}\n            </TableCellWrapper>\n        </Table.Row>\n    );\n}\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\n\nimport WaitSpinner from '@splunk/react-ui/WaitSpinner';\nimport Switch from '@splunk/react-ui/Switch';\nimport Table from '@splunk/react-ui/Table';\nimport ButtonGroup from '@splunk/react-ui/ButtonGroup';\nimport Tooltip from '@splunk/react-ui/Tooltip';\nimport Pencil from '@splunk/react-icons/Pencil';\nimport Clone from '@splunk/react-icons/enterprise/Clone';\nimport Trash from '@splunk/react-icons/enterprise/Trash';\nimport styled from 'styled-components';\nimport { _ } from '@splunk/ui-utils/i18n';\n\nimport CustomTableControl from './CustomTableControl';\nimport { ActionButtonComponent } from './CustomTableStyle';\n\nconst TableCellWrapper = styled(Table.Cell)`\n    padding: 2px;\n`;\n\nconst SwitchWrapper = styled.div`\n    display: flex;\n\n    .toggle_switch {\n        padding: 0;\n        margin-right: 10px;\n    }\n`;\n\nfunction CustomTableRow(props) {\n    const {\n        row,\n        columns,\n        rowActions,\n        headerMapping,\n        handleToggleActionClick,\n        handleEditActionClick,\n        handleCloneActionClick,\n        handleDeleteActionClick,\n    } = props;\n\n    const getCustomCell = (customRow, header) =>\n        React.createElement(CustomTableControl, {\n            serviceName: row.serviceName,\n            field: header.field,\n            row: customRow,\n            fileName: header.customCell.src,\n            type: header.customCell.type,\n        });\n\n    const rowActionsPrimaryButton = useCallback(\n        (selectedRow) => (\n            <TableCellWrapper data-column=\"actions\" key={selectedRow.id}>\n                <ButtonGroup>\n                    {rowActions.includes('edit') && (\n                        <Tooltip content={_('Edit')}>\n                            <ActionButtonComponent\n                                appearance=\"flat\"\n                                icon={<Pencil screenReaderText={null} size={1} />}\n                                onClick={() => handleEditActionClick(selectedRow)}\n                                className=\"editBtn\"\n                            />\n                        </Tooltip>\n                    )}\n                    {rowActions.includes('clone') && (\n                        <Tooltip content={_('Clone')}>\n                            <ActionButtonComponent\n                                appearance=\"flat\"\n                                icon={<Clone screenReaderText={null} size={1} />}\n                                onClick={() => handleCloneActionClick(selectedRow)}\n                                className=\"cloneBtn\"\n                            />\n                        </Tooltip>\n                    )}\n                    {rowActions.includes('delete') && (\n                        <Tooltip content={_('Delete')}>\n                            <ActionButtonComponent\n                                appearance=\"flat\"\n                                icon={<Trash screenReaderText={null} size={1} />}\n                                onClick={() => handleDeleteActionClick(selectedRow)}\n                                className=\"deleteBtn\"\n                            />\n                        </Tooltip>\n                    )}\n                </ButtonGroup>\n            </TableCellWrapper>\n        ),\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [handleEditActionClick, handleCloneActionClick, handleDeleteActionClick]\n    );\n\n    let statusContent = 'Enabled';\n    // eslint-disable-next-line no-underscore-dangle\n    if (row.__toggleShowSpinner) {\n        statusContent = <WaitSpinner />;\n    } else if (row.disabled) {\n        statusContent =\n            headerMapping?.disabled && headerMapping.disabled[row.disabled]\n                ? headerMapping.disabled[row.disabled]\n                : 'Disabled';\n    }\n\n    // Fix set of props are passed to Table.Row element\n    return (\n        <Table.Row // nosemgrep: typescript.react.security.audit.react-props-injection.react-props-injection, typescript.react.best-practice.react-props-spreading.react-props-spreading\n            key={row.id}\n            {...props}\n        >\n            {columns &&\n                columns.length &&\n                columns.map((header) => {\n                    let cellHTML = '';\n\n                    if (header.customCell && header.customCell.src) {\n                        cellHTML = (\n                            <Table.Cell data-column={header.field} key={header.field}>\n                                {getCustomCell(row, header)}\n                            </Table.Cell>\n                        );\n                    } else if (header.field === 'disabled') {\n                        cellHTML = (\n                            <Table.Cell data-column={header.field} key={header.field}>\n                                <SwitchWrapper>\n                                    <Switch\n                                        key={row.name}\n                                        value={row.disabled}\n                                        onClick={() => handleToggleActionClick(row)}\n                                        selected={!row.disabled}\n                                        // eslint-disable-next-line no-underscore-dangle\n                                        disabled={row.__toggleShowSpinner}\n                                        appearance=\"toggle\"\n                                        className=\"toggle_switch\"\n                                        selectedLabel={_(\n                                            headerMapping?.disabled?.false\n                                                ? headerMapping.disabled.false\n                                                : 'Enabled'\n                                        )}\n                                        unselectedLabel={_(\n                                            headerMapping?.disabled?.true\n                                                ? headerMapping.disabled.true\n                                                : 'Disabled'\n                                        )}\n                                    />\n                                    <span data-test=\"status\">{statusContent}</span>\n                                </SwitchWrapper>\n                            </Table.Cell>\n                        );\n                    } else if (header.field === 'actions') {\n                        cellHTML = rowActionsPrimaryButton(row);\n                    } else {\n                        cellHTML = (\n                            <Table.Cell\n                                style={{ wordBreak: 'break-word' }}\n                                data-column={header.field}\n                                key={header.field}\n                            >\n                                {headerMapping[header.field] &&\n                                Object.prototype.hasOwnProperty.call(\n                                    headerMapping[header.field],\n                                    row[header.field]\n                                )\n                                    ? headerMapping[header.field][row[header.field]]\n                                    : row[header.field]}\n                            </Table.Cell>\n                        );\n                    }\n                    return cellHTML;\n                })}\n        </Table.Row>\n    );\n}\n\nCustomTableRow.propTypes = {\n    row: PropTypes.any,\n    columns: PropTypes.array,\n    rowActions: PropTypes.array,\n    headerMapping: PropTypes.object,\n    handleToggleActionClick: PropTypes.func,\n    handleEditActionClick: PropTypes.func,\n    handleCloneActionClick: PropTypes.func,\n    handleDeleteActionClick: PropTypes.func,\n};\n\nexport default React.memo(CustomTableRow);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Modal from '@splunk/react-ui/Modal';\nimport Message from '@splunk/react-ui/Message';\nimport styled from 'styled-components';\nimport WaitSpinner from '@splunk/react-ui/WaitSpinner';\nimport update from 'immutability-helper';\nimport { _ } from '@splunk/ui-utils/i18n';\nimport { generateToast } from '../util/util';\nimport { StyledButton } from '../pages/EntryPageStyle';\n\nimport { axiosCallWrapper } from '../util/axiosCallWrapper';\nimport TableContext from '../context/TableContext';\nimport { parseErrorMsg, getFormattedMessage } from '../util/messageUtil';\nimport { PAGE_INPUT } from '../constants/pages';\n\nconst ModalWrapper = styled(Modal)`\n    width: 800px;\n`;\n\nclass DeleteModal extends Component {\n    static contextType = TableContext;\n\n    constructor(props) {\n        super(props);\n        this.state = { isDeleting: false, ErrorMsg: '' };\n    }\n\n    handleRequestClose = () => {\n        // set ErrorMsg to empty string on close or cancel\n        // so that on again open of modal it does not show the same ErrorMsg\n        this.state.ErrorMsg = '';\n        this.props.handleRequestClose();\n    };\n\n    handleDelete = () => {\n        this.setState(\n            (prevState) => ({ ...prevState, isDeleting: true, ErrorMsg: '' }),\n            () => {\n                axiosCallWrapper({\n                    serviceName: `${this.props.serviceName}/${encodeURIComponent(\n                        this.props.stanzaName\n                    )}`,\n                    customHeaders: { 'Content-Type': 'application/x-www-form-urlencoded' },\n                    method: 'delete',\n                    handleError: false,\n                })\n                    .catch((err) => {\n                        const errorSubmitMsg = parseErrorMsg(err);\n                        this.setState({ ErrorMsg: errorSubmitMsg, isDeleting: false });\n                        return Promise.reject(err);\n                    })\n                    .then(() => {\n                        this.context.setRowData(\n                            update(this.context.rowData, {\n                                [this.props.serviceName]: { $unset: [this.props.stanzaName] },\n                            })\n                        );\n                        this.setState({ isDeleting: false });\n                        this.handleRequestClose();\n                        generateToast(`Deleted \"${this.props.stanzaName}\"`, 'success');\n                    });\n            }\n        );\n    };\n\n    // Display error message\n    generateErrorMessage = () => {\n        if (this.state.ErrorMsg) {\n            return (\n                <div>\n                    <Message appearance=\"fill\" type=\"error\">\n                        {this.state.ErrorMsg}\n                    </Message>\n                </div>\n            );\n        }\n        return null;\n    };\n\n    render() {\n        let deleteMsg;\n        if (this.props.page === PAGE_INPUT) {\n            deleteMsg = getFormattedMessage(103, [this.props.stanzaName]);\n        } else {\n            deleteMsg = getFormattedMessage(102, [this.props.stanzaName]);\n        }\n        return (\n            <ModalWrapper open={this.props.open}>\n                <Modal.Header\n                    title={getFormattedMessage(101)}\n                    onRequestClose={this.handleRequestClose}\n                />\n                <Modal.Body className=\"deletePrompt\">\n                    {this.generateErrorMessage()}\n                    <p>{deleteMsg}</p>\n                </Modal.Body>\n                <Modal.Footer>\n                    <StyledButton\n                        appearance=\"secondary\"\n                        onClick={this.handleRequestClose}\n                        label={_('Cancel')}\n                        disabled={this.state.isDeleting}\n                    />\n                    <StyledButton\n                        appearance=\"primary\"\n                        label={this.state.isDeleting ? <WaitSpinner /> : _('Delete')}\n                        onClick={this.handleDelete}\n                        disabled={this.state.isDeleting}\n                    />\n                </Modal.Footer>\n            </ModalWrapper>\n        );\n    }\n}\n\nDeleteModal.propTypes = {\n    page: PropTypes.string.isRequired,\n    open: PropTypes.bool,\n    handleRequestClose: PropTypes.func,\n    serviceName: PropTypes.string,\n    stanzaName: PropTypes.string,\n};\n\nexport default DeleteModal;\n","import React, { useCallback, useEffect, memo, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Table from '@splunk/react-ui/Table';\nimport { _ } from '@splunk/ui-utils/i18n';\n\nimport useQuery from '../../hooks/useQuery';\nimport { MODE_CLONE, MODE_EDIT } from '../../constants/modes';\nimport { PAGE_INPUT } from '../../constants/pages';\nimport { getUnifiedConfigs } from '../../util/util';\nimport { getExpansionRow } from './TableExpansionRow';\nimport { STYLE_MODAL, STYLE_PAGE } from '../../constants/dialogStyles';\nimport CustomTableRow from './CustomTableRow';\nimport EntityModal from '../EntityModal';\nimport DeleteModal from '../DeleteModal';\nimport TableContext from '../../context/TableContext';\nimport { NoRecordsDiv } from './CustomTableStyle';\n\nfunction CustomTable({\n    page,\n    serviceName,\n    data,\n    handleToggleActionClick,\n    handleOpenPageStyleDialog,\n    handleSort,\n    sortDir,\n    sortKey,\n    tableConfig,\n}) {\n    const unifiedConfigs = getUnifiedConfigs();\n    const [entityModal, setEntityModal] = useState({ open: false });\n    const [deleteModal, setDeleteModal] = useState({ open: false });\n\n    const { rowData } = useContext(TableContext);\n\n    const { moreInfo, header: headers, actions } = tableConfig;\n\n    const headerMapping = {};\n    headers.forEach((x) => {\n        headerMapping[x.field] = x.mapping;\n    });\n\n    const serviceToStyleMap = {};\n    if (page === PAGE_INPUT) {\n        unifiedConfigs.pages.inputs.services.forEach((x) => {\n            serviceToStyleMap[x.name] = x.style === STYLE_PAGE ? STYLE_PAGE : STYLE_MODAL;\n        });\n    } else {\n        unifiedConfigs.pages.configuration.tabs.forEach((x) => {\n            serviceToStyleMap[x.name] = x.style === STYLE_PAGE ? STYLE_PAGE : STYLE_MODAL;\n        });\n    }\n\n    const query = useQuery();\n\n    // Run only once when component is mounted to load component based on initial query params\n    // and when query params are updated\n    useEffect(() => {\n        // Only run when tab matches serviceName or if in input page where serviceName is undefined\n        if (query && (query.get('tab') === serviceName || typeof serviceName === 'undefined')) {\n            // Open modal when record is available in query params and modal is not open\n            if (query.get('record') && !entityModal.open) {\n                const serviceKey = Object.keys(rowData).find(\n                    (x) => typeof rowData[x][query.get('record')] !== 'undefined'\n                );\n                if (serviceKey) {\n                    const row = rowData[serviceKey][query.get('record')];\n                    setEntityModal({\n                        ...entityModal,\n                        open: true,\n                        serviceName: row.serviceName,\n                        stanzaName: row.name,\n                        mode: MODE_EDIT,\n                    });\n                }\n            } else if (!query.get('record') && entityModal.open) {\n                // Close modal if record query param is not available and modal is open\n                // NOTE: This should only be executed in case of MODE_EDIT which is handled by\n                // useEffect dependency which will only be changed in case of editing entity\n                setEntityModal({ ...entityModal, open: false });\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const handleEntityClose = () => {\n        setEntityModal({ ...entityModal, open: false });\n    };\n\n    const handleEditActionClick = useCallback(\n        (selectedRow) => {\n            if (serviceToStyleMap[selectedRow.serviceName] === STYLE_PAGE) {\n                handleOpenPageStyleDialog(selectedRow, MODE_EDIT);\n            } else {\n                setEntityModal({\n                    ...entityModal,\n                    open: true,\n                    serviceName: selectedRow.serviceName,\n                    stanzaName: selectedRow.name,\n                    mode: MODE_EDIT,\n                });\n            }\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [entityModal]\n    );\n\n    const handleDeleteClose = () => {\n        setDeleteModal({ ...deleteModal, open: false });\n    };\n\n    const handleCloneActionClick = useCallback(\n        (selectedRow) => {\n            if (serviceToStyleMap[selectedRow.serviceName] === STYLE_PAGE) {\n                handleOpenPageStyleDialog(selectedRow, MODE_CLONE);\n            } else {\n                setEntityModal({\n                    ...entityModal,\n                    open: true,\n                    serviceName: selectedRow.serviceName,\n                    stanzaName: selectedRow.name,\n                    mode: MODE_CLONE,\n                });\n            }\n        },\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [entityModal]\n    );\n\n    const handleDeleteActionClick = useCallback(\n        (selectedRow) => {\n            setDeleteModal({\n                ...deleteModal,\n                open: true,\n                stanzaName: selectedRow.name,\n                serviceName: selectedRow.serviceName,\n            });\n        },\n        [deleteModal]\n    );\n\n    const generateModalDialog = () => {\n        if (entityModal.open) {\n            let label;\n            if (page === 'inputs') {\n                const { services } = unifiedConfigs.pages.inputs;\n                label = services.find((x) => x.name === entityModal.serviceName)?.title;\n            } else if (page === 'configuration') {\n                const { tabs } = unifiedConfigs.pages.configuration;\n                label = tabs.find((x) => x.name === entityModal.serviceName)?.title;\n            }\n            return (\n                <EntityModal\n                    page={page}\n                    open={entityModal.open}\n                    handleRequestClose={handleEntityClose}\n                    serviceName={entityModal.serviceName}\n                    stanzaName={entityModal.stanzaName}\n                    mode={entityModal.mode}\n                    formLabel={\n                        entityModal.mode === MODE_CLONE ? _(`Clone `) + label : _(`Update `) + label\n                    }\n                />\n            );\n        }\n        return null;\n    };\n\n    const generateDeleteDialog = () => (\n        <DeleteModal\n            page={page}\n            open={deleteModal.open}\n            handleRequestClose={handleDeleteClose}\n            serviceName={deleteModal.serviceName}\n            stanzaName={deleteModal.stanzaName}\n        />\n    );\n\n    const generateColumns = () => {\n        const column = [];\n        if (headers && headers.length) {\n            headers.forEach((item) => {\n                column.push({\n                    ...item,\n                    sortKey: item.field || null,\n                });\n            });\n        }\n\n        if (actions && actions.length) {\n            column.push({ label: 'Actions', field: 'actions', sortKey: '' });\n        }\n\n        return column;\n    };\n\n    const columns = generateColumns();\n\n    const getTableHeaderCell = useCallback(\n        () => (\n            <Table.Head>\n                {columns &&\n                    columns.length &&\n                    columns.map((headData) => (\n                        <Table.HeadCell\n                            key={headData.field}\n                            onSort={headData.sortKey ? handleSort : null}\n                            sortKey={headData.sortKey ? headData.sortKey : null}\n                            sortDir={\n                                headData.sortKey && headData.sortKey === sortKey ? sortDir : 'none'\n                            }\n                        >\n                            {headData.label}\n                        </Table.HeadCell>\n                    ))}\n            </Table.Head>\n        ),\n        [columns, handleSort, sortDir, sortKey]\n    );\n\n    const getTableBody = () => (\n        <Table.Body>\n            {data &&\n                data.length &&\n                data.map((row) => (\n                    <CustomTableRow // nosemgrep: typescript.react.best-practice.react-props-spreading.react-props-spreading\n                        key={row.id}\n                        row={row}\n                        columns={columns}\n                        rowActions={actions}\n                        headerMapping={headerMapping}\n                        {...{\n                            handleEditActionClick,\n                            handleCloneActionClick,\n                            handleDeleteActionClick,\n                        }}\n                        handleToggleActionClick={handleToggleActionClick}\n                        {...(moreInfo\n                            ? {\n                                  expansionRow: getExpansionRow(columns.length, row, moreInfo),\n                              }\n                            : {})}\n                    />\n                ))}\n        </Table.Body>\n    );\n\n    return (\n        <>\n            {columns && columns.length && (\n                <Table // nosemgrep: typescript.react.best-practice.react-props-spreading.react-props-spreading\n                    stripeRows\n                    headType=\"docked\"\n                    {...(moreInfo ? { rowExpansion: 'single' } : {})}\n                >\n                    {getTableHeaderCell()}\n                    {getTableBody()}\n                </Table>\n            )}\n            {!data.length ? <NoRecordsDiv>No records found</NoRecordsDiv> : null}\n            {generateModalDialog()}\n            {generateDeleteDialog()}\n        </>\n    );\n}\n\nCustomTable.propTypes = {\n    page: PropTypes.string.isRequired,\n    serviceName: PropTypes.string,\n    data: PropTypes.array.isRequired,\n    handleToggleActionClick: PropTypes.func,\n    handleOpenPageStyleDialog: PropTypes.func,\n    handleSort: PropTypes.func,\n    sortDir: PropTypes.string,\n    sortKey: PropTypes.string,\n    tableConfig: PropTypes.object.isRequired,\n};\n\nexport default memo(CustomTable);\n","import React, { useContext } from 'react';\nimport Text from '@splunk/react-ui/Text';\nimport PropTypes from 'prop-types';\nimport TableContext from '../../context/TableContext';\n\nfunction TableFilter(props) {\n    const { searchText } = useContext(TableContext);\n\n    return <Text appearance=\"search\" onChange={props.handleChange} value={searchText} />;\n}\n\nTableFilter.propTypes = {\n    handleChange: PropTypes.func,\n};\n\nexport default TableFilter;\n","import React from 'react';\nimport Modal from '@splunk/react-ui/Modal';\nimport Message from '@splunk/react-ui/Message';\nimport styled from 'styled-components';\nimport { StyledButton } from '../pages/EntryPageStyle';\n\nconst ModalWrapper = styled(Modal)`\n    width: 600px;\n`;\n\ninterface AcceptModalProps {\n    title: string;\n    open: boolean;\n    handleRequestClose: (accepted: boolean) => void;\n    message?: string;\n    declineBtnLabel?: string;\n    acceptBtnLabel?: string;\n}\n\nfunction AcceptModal(props: AcceptModalProps) {\n    return (\n        <ModalWrapper open={props.open}>\n            <Modal.Header\n                onRequestClose={() => props.handleRequestClose(false)}\n                title={props.title}\n            />\n            <Modal.Body>\n                <Message appearance=\"fill\" type=\"warning\">\n                    {props.message}\n                </Message>\n            </Modal.Body>\n            <Modal.Footer>\n                <StyledButton\n                    appearance=\"primary\"\n                    onClick={() => props.handleRequestClose(false)}\n                    label={props.declineBtnLabel || 'Cancel'}\n                />\n                <StyledButton\n                    appearance=\"primary\"\n                    onClick={() => props.handleRequestClose(true)}\n                    label={props.acceptBtnLabel || 'OK'}\n                />\n            </Modal.Footer>\n        </ModalWrapper>\n    );\n}\n\nexport default AcceptModal;\n","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Button from '@splunk/react-ui/Button';\nimport { variables } from '@splunk/themes';\nimport AcceptModal from './AcceptModal';\n\nexport interface InputRowData {\n    account: string;\n    disabled: boolean;\n    host: string;\n    host_resolved: string;\n    index: string;\n    interval: string;\n    name: string;\n    serviceName: string;\n    serviceTitle: string;\n    __toggleShowSpinner: boolean;\n}\n\ninterface DisableAllStatusButtonProps {\n    displayActionBtnAllRows: boolean;\n    dataRows: InputRowData[];\n    changeToggleStatus: (row: InputRowData) => void;\n}\n\nconst InteractAllActionButton = styled(Button)`\n    max-width: fit-content;\n    font-size: ${variables.fontSize};\n`;\n\nexport function InteractAllStatusButtons(props: DisableAllStatusButtonProps) {\n    const [tryInteract, setTryInteract] = useState(false);\n    const [isDisabling, setIsDisabling] = useState(false);\n\n    const handleInteractWithAllRowsStatus = (rowsData: InputRowData[]) => {\n        rowsData.forEach((row) => {\n            if (row.disabled !== isDisabling) {\n                props.changeToggleStatus(row);\n            }\n        });\n    };\n\n    const handleAcceptModal = (e: boolean) => {\n        setTryInteract(false);\n        if (e) {\n            handleInteractWithAllRowsStatus(props.dataRows);\n        }\n    };\n\n    return props.displayActionBtnAllRows ? (\n        <div>\n            <InteractAllActionButton\n                data-testid=\"enableAllBtn\"\n                onClick={() => {\n                    setTryInteract(true);\n                    setIsDisabling(false);\n                }}\n                role=\"button\"\n                disabled={props.dataRows.length < 1}\n            >\n                Enable all\n            </InteractAllActionButton>\n            <InteractAllActionButton\n                data-testid=\"disableAllBtn\"\n                onClick={() => {\n                    setTryInteract(true);\n                    setIsDisabling(true);\n                }}\n                role=\"button\"\n                disabled={props.dataRows.length < 1}\n            >\n                Disable all\n            </InteractAllActionButton>\n            {tryInteract && (\n                <AcceptModal\n                    message={`Do you want to ${\n                        isDisabling ? 'disable' : 'enable'\n                    } all? It may take a while.`}\n                    open={tryInteract}\n                    handleRequestClose={handleAcceptModal}\n                    title={isDisabling ? 'Disable all' : 'Enable all'}\n                    declineBtnLabel=\"No\"\n                    acceptBtnLabel=\"Yes\"\n                />\n            )}\n        </div>\n    ) : null;\n}\n","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport Select from '@splunk/react-ui/Select';\nimport Paginator from '@splunk/react-ui/Paginator';\nimport styled from 'styled-components';\nimport { _ } from '@splunk/ui-utils/i18n';\n\nimport TableFilter from './TableFilter';\nimport TableContext from '../../context/TableContext';\nimport { TableSelectBoxWrapper } from './CustomTableStyle';\nimport { PAGE_INPUT } from '../../constants/pages';\nimport { StyledButton } from '../../pages/EntryPageStyle';\nimport { InteractAllStatusButtons } from '../InteractAllStatusButton';\n\nconst TableHeaderWrapper = styled.div`\n    display: flex;\n    justify-content: space-between;\n    border-top: 1px solid #ccc;\n    padding-top: 5px;\n    margin-bottom: 5px;\n`;\n\nconst TableFilterWrapper = styled.div`\n    max-width: 300px;\n    width: 100%;\n`;\n\nfunction TableHeader({\n    page,\n    isTabs,\n    services,\n    totalElement,\n    handleRequestModalOpen,\n    allFilteredData,\n    changeToggleStatus,\n    displayActionBtnAllRows,\n}) {\n    const {\n        pageSize,\n        currentPage,\n        setCurrentPage,\n        setPageSize,\n        searchType,\n        setSearchType,\n        setSearchText,\n    } = useContext(TableContext);\n\n    const itemLabel = page === PAGE_INPUT ? 'Input' : 'Item';\n\n    const getSearchTypeDropdown = () => {\n        if (services.length < 2) {\n            return null;\n        }\n        let arr = [];\n        arr = services.map((service) => (\n            <Select.Option key={service.name} label={service.title} value={service.name} />\n        ));\n\n        arr.unshift(<Select.Option key=\"all\" label={_('All')} value=\"all\" />);\n        return (\n            <Select\n                value={searchType}\n                className=\"dropdownInput\"\n                onChange={(e, { value }) => {\n                    setCurrentPage(0);\n                    setSearchType(value);\n                }}\n            >\n                {arr}\n            </Select>\n        );\n    };\n\n    return (\n        <TableHeaderWrapper>\n            <div>\n                <span className=\"inputNumber\">\n                    {totalElement}\n                    {totalElement > 1 ? _(` ${itemLabel}s`) : _(` ${itemLabel}`)}\n                </span>\n                {page === PAGE_INPUT ? (\n                    <TableSelectBoxWrapper>\n                        <Select\n                            value={pageSize}\n                            className=\"dropdownPage\"\n                            onChange={(e, { value }) => {\n                                setCurrentPage(0);\n                                setPageSize(value);\n                            }}\n                        >\n                            <Select.Option key=\"10\" label={_('10 Per Page')} value={10} />\n                            <Select.Option key=\"25\" label={_('25 Per Page')} value={25} />\n                            <Select.Option key=\"50\" label={_('50 Per Page')} value={50} />\n                        </Select>\n                        {!isTabs && getSearchTypeDropdown()}\n                    </TableSelectBoxWrapper>\n                ) : null}\n            </div>\n            <TableFilterWrapper>\n                <TableFilter\n                    handleChange={(e, { value }) => {\n                        setCurrentPage(0);\n                        setSearchText(value);\n                    }}\n                />\n            </TableFilterWrapper>\n            <div>\n                <Paginator\n                    onChange={(e, { page: pageNumber }) => setCurrentPage(pageNumber - 1)}\n                    current={currentPage + 1}\n                    alwaysShowLastPageLink\n                    totalPages={Math.ceil(totalElement / pageSize)}\n                />\n                {isTabs && (\n                    <StyledButton\n                        label={_('Add')}\n                        appearance=\"primary\"\n                        onClick={handleRequestModalOpen}\n                    />\n                )}\n            </div>\n            <InteractAllStatusButtons\n                displayActionBtnAllRows={displayActionBtnAllRows}\n                dataRows={allFilteredData}\n                changeToggleStatus={changeToggleStatus}\n            />\n        </TableHeaderWrapper>\n    );\n}\n\nTableHeader.propTypes = {\n    page: PropTypes.string,\n    services: PropTypes.array,\n    totalElement: PropTypes.number,\n    isTabs: PropTypes.bool,\n    handleRequestModalOpen: PropTypes.func,\n    displayActionBtnAllRows: PropTypes.bool,\n    changeToggleStatus: PropTypes.func,\n    allFilteredData: PropTypes.array,\n};\n\nexport default TableHeader;\n","import React, { useState, useContext, useEffect, memo } from 'react';\nimport update from 'immutability-helper';\nimport axios from 'axios';\nimport PropTypes from 'prop-types';\n\nimport { WaitSpinnerWrapper } from './CustomTableStyle';\nimport { axiosCallWrapper } from '../../util/axiosCallWrapper';\nimport { getUnifiedConfigs, generateToast, isTrue } from '../../util/util';\nimport CustomTable from './CustomTable';\nimport TableHeader from './TableHeader';\nimport TableContext from '../../context/TableContext';\nimport { PAGE_INPUT } from '../../constants/pages';\n\nfunction TableWrapper({\n    page,\n    serviceName,\n    handleRequestModalOpen,\n    handleOpenPageStyleDialog,\n    displayActionBtnAllRows,\n}) {\n    const [sortKey, setSortKey] = useState('name');\n    const [sortDir, setSortDir] = useState('asc');\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState(null);\n\n    const { rowData, setRowData, pageSize, currentPage, searchText, searchType } =\n        useContext(TableContext);\n\n    const unifiedConfigs = getUnifiedConfigs();\n\n    const services =\n        page === PAGE_INPUT\n            ? unifiedConfigs.pages.inputs.services\n            : unifiedConfigs.pages.configuration.tabs.filter((x) => x.name === serviceName);\n\n    const tableConfig =\n        page === PAGE_INPUT\n            ? unifiedConfigs.pages.inputs.table ||\n              services.find((x) => x.name === serviceName).table\n            : unifiedConfigs.pages.configuration.tabs.find((x) => x.name === serviceName).table;\n\n    const { moreInfo } = tableConfig;\n    const headers = tableConfig.header;\n    const isTabs = !!serviceName;\n\n    const modifyAPIResponse = (data) => {\n        const obj = {};\n        services.forEach((service, index) => {\n            if (service && service.name && data) {\n                const tmpObj = {};\n                data[index].forEach((val) => {\n                    tmpObj[val.name] = {\n                        ...val.content,\n                        id: val.id,\n                        name: val.name,\n                        serviceName: service.name,\n                        serviceTitle: service.title || '',\n                    };\n                });\n                obj[service.name] = tmpObj;\n            }\n        });\n        setRowData(obj);\n        setLoading(false);\n    };\n\n    const fetchInputs = () => {\n        const requests = [];\n        services.forEach((service) => {\n            requests.push(\n                axiosCallWrapper({\n                    serviceName: service.name,\n                    params: { count: -1 },\n                })\n            );\n        });\n        axios\n            .all(requests)\n            // eslint-disable-next-line no-shadow\n            .catch((error) => {\n                let message = '';\n                let errorCode = '';\n                if (error.response) {\n                    // The request was made and the server responded with a status code\n                    message = `Error received from server: ${error.response.data.messages[0].text}`;\n                    errorCode = page === PAGE_INPUT ? 'ERR0001' : 'ERR0002';\n                } else if (error.request) {\n                    // The request was made but no response was received\n                    message = `No response received while making request to ${page} services`;\n                    errorCode = 'ERR0003';\n                } else {\n                    // Something happened in setting up the request that triggered an Error\n                    message = `Error making request to ${page} services`;\n                    errorCode = 'ERR0004';\n                }\n                // eslint-disable-next-line no-param-reassign\n                error.uccErrorCode = errorCode;\n                generateToast(message);\n                setLoading(false);\n                setError(error);\n                return Promise.reject(error);\n            })\n            .then((response) => {\n                modifyAPIResponse(response.map((res) => res.data.entry));\n            });\n    };\n\n    useEffect(() => {\n        fetchInputs();\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    /**\n     *\n     * @param row {Object} row\n     */\n    const changeToggleStatus = (row) => {\n        setRowData((currentRowData) =>\n            update(currentRowData, {\n                [row.serviceName]: {\n                    [row.name]: {\n                        __toggleShowSpinner: { $set: true },\n                    },\n                },\n            })\n        );\n        const body = new URLSearchParams();\n        body.append('disabled', !row.disabled);\n        axiosCallWrapper({\n            serviceName: `${row.serviceName}/${row.name}`,\n            body,\n            customHeaders: { 'Content-Type': 'application/x-www-form-urlencoded' },\n            method: 'post',\n            handleError: true,\n            callbackOnError: () => {\n                setRowData((currentRowData) =>\n                    update(currentRowData, {\n                        [row.serviceName]: {\n                            [row.name]: {\n                                __toggleShowSpinner: { $set: false },\n                            },\n                        },\n                    })\n                );\n            },\n        }).then((response) => {\n            setRowData((currentRowData) =>\n                update(currentRowData, {\n                    [row.serviceName]: {\n                        [row.name]: {\n                            // ADDON-39125: isTrue required if splunktaucclib resthandlers' super() is not invoked\n                            disabled: { $set: isTrue(response.data.entry[0].content.disabled) },\n                            __toggleShowSpinner: { $set: false },\n                        },\n                    },\n                })\n            );\n        });\n    };\n\n    const handleSort = (e, val) => {\n        const prevSortKey = sortKey;\n        const prevSortDir = prevSortKey === val.sortKey ? sortDir : 'none';\n        const nextSortDir = prevSortDir === 'asc' ? 'desc' : 'asc';\n        setSortDir(nextSortDir);\n        setSortKey(val.sortKey);\n    };\n\n    /**\n     *\n     * @param {Array} data\n     * This function will iterate an arrray and match each key-value with the searchText\n     * It will return a new array which will match with searchText\n     */\n    const findByMatchingValue = (data) => {\n        const arr = [];\n        const tableFields = [];\n\n        headers.forEach((headData) => {\n            tableFields.push(headData.field);\n        });\n        moreInfo?.forEach((moreInfoData) => {\n            tableFields.push(moreInfoData.field);\n        });\n\n        Object.keys(data).forEach((v) => {\n            let found = false;\n            Object.keys(data[v]).forEach((vv) => {\n                if (\n                    tableFields.includes(vv) &&\n                    typeof data[v][vv] === 'string' &&\n                    data[v][vv].toLowerCase().includes(searchText.toLowerCase().trim()) &&\n                    !found\n                ) {\n                    arr.push(data[v]);\n                    found = true;\n                }\n            });\n        });\n        return arr;\n    };\n\n    const getRowData = () => {\n        let arr = [];\n        if (searchType === 'all') {\n            Object.keys(rowData).forEach((key) => {\n                let newArr = [];\n                if (searchText && searchText.length) {\n                    newArr = findByMatchingValue(rowData[key]);\n                } else {\n                    newArr = Object.keys(rowData[key]).map((val) => rowData[key][val]);\n                }\n                arr = arr.concat(newArr);\n            });\n        } else {\n            arr = findByMatchingValue(rowData[searchType]);\n        }\n\n        // For Inputs page, filter the data when tab change\n        if (isTabs) {\n            arr = arr.filter((v) => v.serviceName === serviceName);\n        }\n\n        // Sort the array based on the sort value\n        const sortedArr = arr.sort((rowA, rowB) => {\n            if (sortDir === 'asc') {\n                const rowAValue = rowA[sortKey] === undefined ? '' : rowA[sortKey];\n                const rowBValue = rowB[sortKey] === undefined ? '' : rowB[sortKey];\n                return rowAValue > rowBValue ? 1 : -1;\n            }\n            if (sortDir === 'desc') {\n                const rowAValue = rowA[sortKey] === undefined ? '' : rowA[sortKey];\n                const rowBValue = rowB[sortKey] === undefined ? '' : rowB[sortKey];\n                return rowBValue > rowAValue ? 1 : -1;\n            }\n            return 0;\n        });\n\n        let updatedArr = sortedArr.slice(currentPage * pageSize, (currentPage + 1) * pageSize);\n\n        if (currentPage > 0 && !updatedArr.length) {\n            updatedArr = sortedArr.slice((currentPage - 1) * pageSize, pageSize);\n        }\n\n        return [updatedArr, arr.length, arr];\n    };\n\n    if (error?.uccErrorCode) {\n        throw error;\n    }\n\n    if (loading) {\n        return <WaitSpinnerWrapper size=\"medium\" />;\n    }\n\n    const [filteredData, totalElement, allFilteredData] = getRowData();\n    return (\n        <>\n            <TableHeader\n                page={page}\n                services={services}\n                totalElement={totalElement}\n                handleRequestModalOpen={handleRequestModalOpen}\n                changeToggleStatus={changeToggleStatus}\n                isTabs={isTabs}\n                allFilteredData={allFilteredData}\n                displayActionBtnAllRows={displayActionBtnAllRows}\n            />\n            <CustomTable\n                page={page}\n                serviceName={serviceName}\n                data={filteredData}\n                handleToggleActionClick={(row) => changeToggleStatus(row)}\n                handleSort={handleSort}\n                sortDir={sortDir}\n                sortKey={sortKey}\n                handleOpenPageStyleDialog={handleOpenPageStyleDialog}\n                tableConfig={tableConfig}\n                services={services}\n            />\n        </>\n    );\n}\n\nTableWrapper.propTypes = {\n    page: PropTypes.string,\n    serviceName: PropTypes.string,\n    handleRequestModalOpen: PropTypes.func,\n    handleOpenPageStyleDialog: PropTypes.func,\n    displayActionBtnAllRows: PropTypes.bool,\n};\n\nexport default memo(TableWrapper);\n","export const STYLE_PAGE = 'page';\nexport const STYLE_MODAL = 'modal';\n","export const MODE_CLONE = 'clone';\nexport const MODE_CREATE = 'create';\nexport const MODE_DELETE = 'delete';\nexport const MODE_EDIT = 'edit';\nexport const MODE_CONFIG = 'config';\n","import { getFormattedMessage } from '../util/messageUtil';\n\n// Regex of ipv4, email and date come from\n// https://github.com/aldeed/meteor-simple-schema/blob/4c1e2570b1055ad60e1e6540582b882f765fde13/simple-schema.js#L525\nexport const REGEX_IPV4 = /^(?:(?:[0-1]?\\d{1,2}|2[0-4]\\d|25[0-5])(?:\\.|$)){4}$/;\n\nexport const REGEX_EMAIL = // eslint-disable-next-line no-useless-escape\n    /^[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n\n// CodeQL: This Regex will be executed at client side and to avoid regression we won't fix.\nexport const REGEX_URL =\n    /^(?:(?:https?|ftp|opc\\.tcp):\\/\\/)?(?:\\S+(?::\\S*)?@)?(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]+-?_?)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]+-?)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,}))?)(?::\\d{2,5})?(?:\\/[^\\s]*)?$/;\n\n// From https://github.com/moment/moment/blob/2.17.1/moment.js#L1980 moment.js is using regex below for checking ISO8601 date string\nexport const REGEX_DATE = // eslint-disable-next-line no-useless-escape\n    /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n\nexport const PREDEFINED_VALIDATORS_DICT = {\n    url: { regex: REGEX_URL, inputValueType: getFormattedMessage(111) },\n    email: { regex: REGEX_EMAIL, inputValueType: getFormattedMessage(112) },\n    ipv4: { regex: REGEX_IPV4, inputValueType: getFormattedMessage(113) },\n    date: { regex: REGEX_DATE, inputValueType: getFormattedMessage(114) },\n};\n","import React, { createContext, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst TableContext = createContext({\n    rowData: {},\n    setRowData: () => {},\n});\n\nexport function TableContextProvider({ children }) {\n    const [rowData, setRowData] = useState({});\n    const [searchText, setSearchText] = useState('');\n    const [searchType, setSearchType] = useState('all');\n    const [pageSize, setPageSize] = useState(10);\n    const [currentPage, setCurrentPage] = useState(0);\n\n    return (\n        <TableContext.Provider\n            // eslint-disable-next-line react/jsx-no-constructed-context-values\n            value={{\n                rowData,\n                setRowData,\n                searchText,\n                setSearchText,\n                searchType,\n                setSearchType,\n                pageSize,\n                setPageSize,\n                currentPage,\n                setCurrentPage,\n            }}\n        >\n            {children}\n        </TableContext.Provider>\n    );\n}\n\nTableContextProvider.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n};\n\nexport default TableContext;\n","import { useLocation } from 'react-router-dom';\n\n// A custom hook that builds on useLocation to parse the query string for you.\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default useQuery;\n","import styled from 'styled-components';\nimport { variables } from '@splunk/themes';\n\nexport const TitleComponent = styled.div.attrs({\n    className: 'pageTitle',\n})`\n    &.pageTitle {\n        font-size: ${variables.fontSizeXXLarge};\n        margin-bottom: 20px;\n    }\n`;\n\nexport const SubTitleComponent = styled.div.attrs({\n    className: 'pageSubtitle',\n})`\n    &.pageSubtitle {\n        font-size: ${variables.fontSize};\n        margin-bottom: 10px;\n    }\n`;\n\nexport const TableCaptionComponent = styled.div`\n    .table-caption-inner {\n        text-align: left;\n    }\n`;\n","import * as _ from 'lodash';\nimport { PREDEFINED_VALIDATORS_DICT } from '../constants/preDefinedRegex';\nimport { getFormattedMessage } from './messageUtil';\n\n/**\n * @typedef Error\n * @type {object}\n * @property {string} errorMsg\n * @property {string} errorField\n */\n\n/**\n * @typedef ValidatorBase\n * @type {object}\n * @property {string} type\n * @property {string} [errorField]\n * @property {string} [errorMsg]\n */\n\nconst parseFunctionRawStr = (rawStr) => {\n    let err;\n    let result;\n\n    try {\n        // eslint-disable-next-line no-eval\n        result = eval(`(${rawStr})`);\n    } catch (e) {\n        err = getFormattedMessage(11, rawStr);\n    }\n\n    return { err, result };\n};\n\n// Validate provided saveValidator function\nexport function SaveValidator(validatorFunc, formData) {\n    const { error, result } = parseFunctionRawStr(validatorFunc);\n    if (error) {\n        return { errorMsg: error };\n    }\n    const ret = result(formData);\n    if (typeof ret === 'string') {\n        return { errorMsg: ret };\n    }\n}\n\nconst parseNumberValidator = (range) => {\n    const isRangeLegal =\n        range.length === 2 && _.isNumber(range[0]) && _.isNumber(range[1]) && range[0] <= range[1];\n\n    const error = isRangeLegal ? undefined : getFormattedMessage(13, JSON.stringify(range));\n\n    return { error };\n};\n\nconst parseRegexRawStr = (rawStr) => {\n    let error;\n    let result;\n\n    try {\n        result = new RegExp(rawStr);\n    } catch (e) {\n        error = getFormattedMessage(12, rawStr);\n    }\n\n    return { error, result };\n};\n\nclass Validator {\n    constructor(entities) {\n        this.entities = entities;\n        this.isName = entities.find((e) => e.field === 'name');\n    }\n\n    // eslint-disable-next-line class-methods-use-this\n    static checkIsFieldHasInput = (attrValue) =>\n        attrValue !== undefined &&\n        attrValue !== null &&\n        (typeof attrValue === 'string' ? attrValue.trim() !== '' : true);\n\n    /**\n     * Validate the required field has value\n     * @param {string} field\n     * @param {string|number} label\n     * @param {string|number} data\n     * @returns {Error|false}\n     */\n    static RequiredValidator(field, label, data) {\n        if (!Validator.checkIsFieldHasInput(data)) {\n            return { errorField: field, errorMsg: getFormattedMessage(6, [label]) };\n        }\n        return false;\n    }\n\n    /**\n     * @typedef {ValidatorBase} StringValidatorOptions\n     * @property {number} minLength\n     * @property {number} maxLength\n     */\n\n    /**\n     * Validate the string length of field\n     * @param {string} field\n     * @param {string|number} label\n     * @param {StringValidatorOptions} validator\n     * @param {string} data\n     * @returns {Error|false}\n     */\n    static StringValidator(field, label, validator, data) {\n        if (Validator.checkIsFieldHasInput(data) && data.length > validator.maxLength) {\n            return {\n                errorField: field,\n                errorMsg: validator.errorMsg\n                    ? validator.errorMsg\n                    : getFormattedMessage(18, [label, validator.maxLength]),\n            };\n        }\n        if (Validator.checkIsFieldHasInput(data) && data.length < validator.minLength) {\n            return {\n                errorField: field,\n                errorMsg: validator.errorMsg\n                    ? validator.errorMsg\n                    : getFormattedMessage(17, [label, validator.minLength]),\n            };\n        }\n        return false;\n    }\n\n    /**\n     * @typedef {ValidatorBase} RegexValidatorOptions\n     * @property {string} pattern\n     */\n\n    /**\n     * Validate the field should match the provided Regex\n     * @param {string} field\n     * @param {string|number} label\n     * @param {RegexValidatorOptions} validator\n     * @param {string} data\n     * @returns {Error|false}\n     */\n    static RegexValidator(field, label, validator, data) {\n        const { error, result: regex } = parseRegexRawStr(validator.pattern);\n        if (error) {\n            return { errorField: field, errorMsg: error };\n        }\n        if (Validator.checkIsFieldHasInput(data) && !regex.test(data)) {\n            return {\n                errorField: field,\n                errorMsg: validator.errorMsg\n                    ? validator.errorMsg\n                    : getFormattedMessage(15, [label, validator.pattern]),\n            };\n        }\n        return false;\n    }\n\n    // Validate the custom component\n    static CustomValidator(validatorFunc, field, data) {\n        const ret = validatorFunc(field, data);\n        if (typeof ret === 'string') {\n            return { errorField: field, errorMsg: ret };\n        }\n        return false;\n    }\n\n    // Validate the field should match predefined Regexes\n    static PreDefinedRegexValidator(field, label, validator, data, pattern, inputValueType) {\n        const { error, result: regex } = parseRegexRawStr(pattern);\n        if (error) {\n            return { errorField: field, errorMsg: error };\n        }\n        if (Validator.checkIsFieldHasInput(data) && !regex.test(data)) {\n            return {\n                errorField: field,\n                errorMsg: validator.errorMsg\n                    ? validator.errorMsg\n                    : getFormattedMessage(19, [label, inputValueType]),\n            };\n        }\n        return false;\n    }\n\n    /**\n     * @typedef {ValidatorBase} NumberValidatorOptions\n     * @property {[number, number]} range\n     */\n\n    /**\n     * Validate the field should match the provided Regex\n     * @param {string} field\n     * @param {string|number} label\n     * @param {NumberValidatorOptions} validator\n     * @param {string} data\n     * @returns {Error|false}\n     */\n    // Validate the range of numeric field\n    static NumberValidator(field, label, validator, data) {\n        const { error } = parseNumberValidator(validator.range);\n        if (error) {\n            return { errorField: field, errorMsg: error };\n        }\n\n        const val = Number(data);\n        if (Number.isNaN(val)) {\n            return {\n                errorField: field,\n                errorMsg: validator.errorMsg\n                    ? validator.errorMsg\n                    : getFormattedMessage(16, [label]),\n            };\n        }\n        if (\n            (Validator.checkIsFieldHasInput(data) && val > validator.range[1]) ||\n            val < validator.range[0]\n        ) {\n            return {\n                errorField: field,\n                errorMsg: validator.errorMsg\n                    ? validator.errorMsg\n                    : getFormattedMessage(8, [label, validator.range[0], validator.range[1]]),\n            };\n        }\n        return false;\n    }\n\n    doValidation(data) {\n        if (this.isName) {\n            const targetValue = data.name;\n            const nameFieldLabel = this.isName.label;\n\n            if (typeof targetValue === 'undefined' || targetValue === '' || targetValue == null) {\n                return { errorField: 'name', errorMsg: getFormattedMessage(0, [nameFieldLabel]) };\n            }\n            if (!(typeof targetValue === 'string' || targetValue instanceof String)) {\n                return { errorField: 'name', errorMsg: getFormattedMessage(1, [nameFieldLabel]) };\n            }\n            if (\n                targetValue.startsWith('_') ||\n                targetValue === '.' ||\n                targetValue === '..' ||\n                targetValue.toLowerCase() === 'default'\n            ) {\n                return { errorField: 'name', errorMsg: getFormattedMessage(3, [nameFieldLabel]) };\n            }\n            const regexMetaCharacters = ['*', '\\\\', '[', ']', '(', ')', '?', ':'];\n            if (regexMetaCharacters.some((d) => targetValue.indexOf(d) > -1)) {\n                return { errorField: 'name', errorMsg: getFormattedMessage(3, [nameFieldLabel]) };\n            }\n\n            if (targetValue.length >= 1024) {\n                return { errorField: 'name', errorMsg: getFormattedMessage(22, [nameFieldLabel]) };\n            }\n        }\n\n        let ret;\n        let i;\n        let j;\n\n        for (i = 0; i < this.entities.length; i += 1) {\n            if (this.entities[i].required === true) {\n                ret = Validator.RequiredValidator(\n                    this.entities[i].field,\n                    this.entities[i].label,\n                    data[this.entities[i].field]\n                );\n                if (ret) {\n                    return ret;\n                }\n            }\n            if (data[this.entities[i].field] === '' || data[this.entities[i].field] === null) {\n                // eslint-disable-next-line no-continue\n                continue;\n            }\n\n            // Error handling for File Component, by checking field value to ##INVALID_FILE## (Emitting from FileInputComponent.jsx)\n            if (\n                this.entities[i].type === 'file' &&\n                data[this.entities[i].field] === '##INVALID_FILE##'\n            ) {\n                return {\n                    errorField: this.entities[i].field,\n                    errorMsg: getFormattedMessage(26),\n                };\n            }\n\n            if (this.entities[i].validators) {\n                for (j = 0; j < this.entities[i].validators.length; j += 1) {\n                    switch (this.entities[i].validators[j].type) {\n                        case 'string':\n                            ret = Validator.StringValidator(\n                                this.entities[i].field,\n                                this.entities[i].label,\n                                this.entities[i].validators[j],\n                                data[this.entities[i].field]\n                            );\n                            if (ret) {\n                                return ret;\n                            }\n                            break;\n                        case 'regex':\n                            ret = Validator.RegexValidator(\n                                this.entities[i].field,\n                                this.entities[i].label,\n                                this.entities[i].validators[j],\n                                data[this.entities[i].field]\n                            );\n                            if (ret) {\n                                return ret;\n                            }\n                            break;\n                        case 'number':\n                            ret = Validator.NumberValidator(\n                                this.entities[i].field,\n                                this.entities[i].label,\n                                this.entities[i].validators[j],\n                                data[this.entities[i].field]\n                            );\n                            if (ret) {\n                                return ret;\n                            }\n                            break;\n                        case 'url':\n                            ret = Validator.PreDefinedRegexValidator(\n                                this.entities[i].field,\n                                this.entities[i].label,\n                                this.entities[i].validators[j],\n                                data[this.entities[i].field],\n                                PREDEFINED_VALIDATORS_DICT.url.regex,\n                                PREDEFINED_VALIDATORS_DICT.url.inputValueType\n                            );\n                            if (ret) {\n                                return ret;\n                            }\n                            break;\n                        case 'date':\n                            ret = Validator.PreDefinedRegexValidator(\n                                this.entities[i].field,\n                                this.entities[i].label,\n                                this.entities[i].validators[j],\n                                data[this.entities[i].field],\n                                PREDEFINED_VALIDATORS_DICT.date.regex,\n                                PREDEFINED_VALIDATORS_DICT.date.inputValueType\n                            );\n                            if (ret) {\n                                return ret;\n                            }\n                            break;\n                        case 'email':\n                            ret = Validator.PreDefinedRegexValidator(\n                                this.entities[i].field,\n                                this.entities[i].label,\n                                this.entities[i].validators[j],\n                                data[this.entities[i].field],\n                                PREDEFINED_VALIDATORS_DICT.email.regex,\n                                PREDEFINED_VALIDATORS_DICT.email.inputValueType\n                            );\n                            if (ret) {\n                                return ret;\n                            }\n                            break;\n                        case 'ipv4':\n                            ret = Validator.PreDefinedRegexValidator(\n                                this.entities[i].field,\n                                this.entities[i].label,\n                                this.entities[i].validators[j],\n                                data[this.entities[i].field],\n                                PREDEFINED_VALIDATORS_DICT.ipv4.regex,\n                                PREDEFINED_VALIDATORS_DICT.ipv4.inputValueType\n                            );\n                            if (ret) {\n                                return ret;\n                            }\n                            break;\n                        case 'custom':\n                            ret = Validator.CustomValidator(\n                                this.entities[i].validators[j].validatorFunc,\n                                this.entities[i].field,\n                                data[this.entities[i].field]\n                            );\n                            if (ret) {\n                                return ret;\n                            }\n                            break;\n                        default:\n                    }\n                }\n            }\n        }\n        return false;\n    }\n}\n\nexport default Validator;\n","import axios from 'axios';\nimport { CSRFToken, app } from '@splunk/splunk-utils/config';\nimport { createRESTURL } from '@splunk/splunk-utils/url';\nimport { generateEndPointUrl, generateToast } from './util';\n\n/**\n *\n * @param {Object} data The object containing required params for request\n * @param {string} data.serviceName service name which is input name or tab name based on the page\n * @param {string} data.endpointUrl rest endpoint path\n * @param {object} data.params object with params as key value pairs\n * @param {object} data.body object with body as key value pairs for post request\n * @param {object} data.customHeaders extra headers as key value pair\n * @param {string} data.method rest method type\n * @param {string} data.handleError whether or not show toast notifications on failure\n * @param {string} data.callbackOnError callback function to execute after handling error. Only executed when handleError is set to true\n * @returns\n */\nconst axiosCallWrapper = ({\n    serviceName,\n    endpointUrl,\n    params,\n    body,\n    cancelToken,\n    customHeaders = {},\n    method = 'get',\n    handleError = false,\n    callbackOnError = () => {},\n}) => {\n    const endpoint = serviceName ? generateEndPointUrl(serviceName) : endpointUrl;\n    const appData = {\n        app,\n        owner: 'nobody',\n    };\n    const baseHeaders = {\n        'X-Splunk-Form-Key': CSRFToken,\n        'X-Requested-With': 'XMLHttpRequest',\n        'Content-Type': 'application/json',\n    };\n    const headers = Object.assign(baseHeaders, customHeaders);\n    const url = createRESTURL(endpoint, appData);\n\n    let newParams = { output_mode: 'json' };\n    if (params) {\n        newParams = { ...newParams, ...params };\n    }\n\n    const options = {\n        params: newParams,\n        method,\n        url,\n        credentials: 'include',\n        headers,\n        cancelToken,\n    };\n\n    if (method === 'post') {\n        options.data = body;\n    }\n\n    return handleError\n        ? axios(options).catch((error) => {\n              let message = '';\n              if (axios.isCancel(error)) {\n                  return Promise.reject(error);\n              }\n              if (error.response) {\n                  // The request was made and the server responded with a status code\n                  message = `Error response received from server: ${error.response.data.messages[0].text}`;\n              } else if (error.request) {\n                  // The request was made but no response was received\n                  message = `No response received while making request to ${endpoint}`;\n              } else {\n                  // Something happened in setting up the request that triggered an Error\n                  message = `Error making ${method} request to ${endpoint}`;\n              }\n              generateToast(message, 'error');\n              callbackOnError(error);\n              return Promise.reject(error);\n          })\n        : axios(options);\n};\n\nexport { axiosCallWrapper };\n"],"names":["MarkdownWrapper","styled","props","color","MarkdownMessage","markdownText","text","markdownType","to","link","array","fn","i","length","mapping","part","key","linkText","concat","flatMap","split","token","pop","propTypes","PropTypes","React","TextWrapper","Text","TextComponent","e","value","handleChange","field","inline","error","this","className","disabled","toString","onChange","type","encrypted","Component","TextArea","TextAreaComponent","canClear","rowsMax","controlOptions","rowsMin","SelectWrapper","Select","WaitSpinnerWrapper","WaitSpinner","StyledDiv","SingleInputComponent","dependencyValues","restProps","endpointUrl","denyList","allowList","dependencies","createSearchChoice","referenceName","disableSearch","labelField","autoCompleteFields","hideClearBtn","obj","Option","ComboBox","Heading","generateOptions","items","data","forEach","item","label","push","children","child","useState","loading","setLoading","options","setOptions","useEffect","current","source","axios","cancelToken","handleError","params","count","serviceName","axiosCallWrapper","then","response","filterResponse","entry","cancel","effectiveDisabled","loadingIndicator","effectiveIsClearable","required","name","filter","appearance","icon","onClick","MultiSelectWrapper","Multiselect","MultiInputComponent","delimiter","itemList","map","valueList","values","allowNewValues","join","CheckBoxComponent","isFalse","selected","RadioBarWrapper","RadioBar","RadioBarOption","RadioComponent","PlaceholderComponent","defaultValue","CustomControl","newValue","state","shouldRender","globalConfig","getUnifiedConfigs","appName","meta","loadCustomControl","src","Control","customControl","el","setValue","utilCustomFunctions","render","validation","addCustomValidator","setState","nextProps","nextState","_","ref","style","visibility","module","Promise","resolve","import","getBuildDirPath","external","__non_webpack_require__","FileWrapper","File","FileInputComponent","fileSupportMessage","supportedFileTypes","maxFileSize","fileReader","FileReader","textDecoder","TextDecoder","fileName","setFileName","errorMsg","setErrorMsg","onRequestAdd","files","file","readyState","abort","readAsArrayBuffer","onload","isValid","fileType","fileSize","includes","getFormattedMessage","isValidFile","size","decode","result","err","console","log","onRequestRemove","supportsMessage","help","StyledColumnLayout","ColumnLayout","parseValue","collection","resultMap","Map","rawValue","Error","set","checkbox","packValue","Array","from","entries","isGroupWithRows","GroupWrapper","CollapsiblePanelWrapper","CollapsiblePanel","StyledPadding8","CustomGroupLabel","Description","isExpandable","defaultOpen","title","description","StyledSwitch","Switch","StyledText","isTextDisabled","setIsTextDisabled","Column","span","event","previousValue","target","row","handleRowChange","valueForField","get","enable","StyledCheckboxRowWrapper","group","checkedCheckboxesCount","rows","getCheckedCheckboxesCount","fields","expand","rowInsideGroup","checkboxGroup","groups","flattenRowsMixedWithGroups","flattenedRowsWithGroups","groupForThisRow","find","addedGroup","groupToAdd","setValues","submittedField","submittedValue","validationResult","packedValue","errorMessage","parsedValue","some","rowSubmittedValue","Validator","validators","validator","validateCheckboxGroup","useValidation","newValues","getNewCheckboxValues","handleCheckboxToggleAll","newCheckboxValue","oldValue","gutter","custom","helpLink","openInNewContext","multipleSelect","placeholder","radio","singleSelect","textarea","CustomElement","ControlGroupWrapper","ControlGroup","attrs","dataName","ControlWrapper","controlType","isString","entity","CONTROL_TYPE_MAP","rowView","tooltip","utilityFuncts","markdownMessage","mode","helpText","display","str","String","ERROR_OCCURRED_TRY_AGAIN","onCustomHookError","methodName","message","BaseFormView","context","fieldName","groupEntities","clearErrorMsg","handleFormSubmit","datadict","Object","keys","hook","onSave","executeValidationSubmit","temEntities","MODE_CREATE","MODE_CLONE","Boolean","rowData","val","index","entities","findIndex","setErrorFieldMsg","isOAuth","reqFields","authMap","auth_type","isAuthVal","doValidation","errorField","saveValidator","SaveValidator","isSingleOauth","parameters","client_id","redirect_url","stateEnabled","isoauthState","state_enabled","oauth_state","uuidv4","replace","scope","host","encodeURI","endpoint","oauthConf","authCodeEndpoint","redirectURI","URLSearchParams","encodeURIComponent","isCalled","isError","isResponse","childWin","window","open","popupWidth","popupHeight","getMessage","handleOauthToken","waitForAuthentication","authTimeout","closed","waitForBackendResponse","saveData","onSavePromise","body","x","append","fileContent","MODE_EDIT","customHeaders","method","MODE_CONFIG","tmpObj","content","id","setRowData","update","$merge","onSaveSuccess","generateToast","mode_config_title","errorSubmitMsg","parseErrorMsg","onSaveFail","targetValue","changes","$set","dependencyMap","has","loadField","load","dependency","currentValue","newFields","tempState","clearAllErrorMsg","hookDeferred","validatorFunc","msg","previousState","State","warningMsg","newData","temData","Hook","util","groupName","undefined","code","stateResponse","decodeURIComponent","url","accessTokenEndpoint","grant_type","client_secret","redirect_uri","OAuthEndpoint","accessToken","access_token","instanceUrl","instance_url","refreshToken","refresh_token","sleep","timeout","args","ms","setTimeout","collapsibleElement","temState","utilControlWrapper","flag","currentInput","stanzaName","callback","page","PAGE_INPUT","pages","inputs","services","service","updateGroupEntities","loadHook","configuration","tabs","tab","table","currentServiceState","PAGE_CONF","authType","oauth_state_enabled","tempEntity","basic","oauth","authfields","isEncrypted","location","href","toLowerCase","oauthConfData","oauth_popup_width","oauth_popup_height","oauth_timeout","auth_code_endpoint","access_token_endpoint","disableonEdit","changeFields","flattenedMap","onCreate","onRender","onEditLoad","marginTop","generateWarningMessage","generateErrorMessage","renderGroupElements","PureComponent","TableContext","ModalWrapper","Modal","EntityModal","handleRequestClose","form","handleSubmit","close","isSubmititng","buttonText","formLabel","onRequestClose","EntityPage","useRef","isSubmitting","setIsSubmitting","colStyle","boxShadow","useSplunkTheme","embossShadow","padding","backgroundColor","textAlign","width","memo","ERR0001","ERR0002","ERR0003","ERR0004","ERR0005","ErrorBoundary","errorCode","uccErrorCode","level","fontSize","errorCodes","whiteSpace","showBorder","isRequired","CustomTableControl","TableCellWrapper","Table","getExpansionRow","colSpan","moreInfo","customRow","wordBreak","termWidth","DefinitionLists","getExpansionRowData","SwitchWrapper","CustomTableRow","columns","rowActions","headerMapping","handleToggleActionClick","handleEditActionClick","handleCloneActionClick","handleDeleteActionClick","rowActionsPrimaryButton","useCallback","selectedRow","screenReaderText","statusContent","__toggleShowSpinner","header","cellHTML","customCell","getCustomCell","selectedLabel","unselectedLabel","prototype","hasOwnProperty","call","DeleteModal","ErrorMsg","prevState","isDeleting","reject","$unset","deleteMsg","handleDelete","CustomTable","handleOpenPageStyleDialog","handleSort","sortDir","sortKey","tableConfig","unifiedConfigs","entityModal","setEntityModal","deleteModal","setDeleteModal","useContext","headers","actions","serviceToStyleMap","STYLE_PAGE","STYLE_MODAL","query","useQuery","serviceKey","column","handleEntityClose","getTableHeaderCell","headData","onSort","stripeRows","headType","rowExpansion","expansionRow","generateModalDialog","TableFilter","searchText","declineBtnLabel","acceptBtnLabel","InteractAllActionButton","Button","variables","InteractAllStatusButtons","tryInteract","setTryInteract","isDisabling","setIsDisabling","displayActionBtnAllRows","role","dataRows","changeToggleStatus","TableHeaderWrapper","TableFilterWrapper","TableHeader","isTabs","totalElement","handleRequestModalOpen","allFilteredData","pageSize","currentPage","setCurrentPage","setPageSize","searchType","setSearchType","setSearchText","itemLabel","arr","unshift","getSearchTypeDropdown","pageNumber","alwaysShowLastPageLink","totalPages","Math","ceil","TableWrapper","setSortKey","setSortDir","setError","requests","messages","request","res","serviceTitle","currentRowData","callbackOnError","isTrue","findByMatchingValue","tableFields","moreInfoData","v","found","vv","trim","newArr","sortedArr","sort","rowA","rowB","rowAValue","updatedArr","slice","getRowData","filteredData","prevSortDir","PREDEFINED_VALIDATORS_DICT","regex","inputValueType","email","ipv4","date","createContext","TableContextProvider","Provider","useLocation","search","TitleComponent","SubTitleComponent","parseFunctionRawStr","rawStr","eval","formData","ret","parseNumberValidator","range","JSON","stringify","parseRegexRawStr","RegExp","isName","nameFieldLabel","startsWith","d","indexOf","j","RequiredValidator","StringValidator","RegexValidator","NumberValidator","PreDefinedRegexValidator","CustomValidator","checkIsFieldHasInput","maxLength","minLength","pattern","test","Number","isNaN","attrValue","generateEndPointUrl","appData","app","owner","baseHeaders","CSRFToken","assign","createRESTURL","newParams","output_mode","credentials"],"sourceRoot":""}